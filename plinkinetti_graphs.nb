(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    167630,       3498]
NotebookOptionsPosition[    160436,       3382]
NotebookOutlinePosition[    160782,       3397]
CellTagsIndexPosition[    160739,       3394]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"NS", "[", "\"\<plinkinetti_graphs\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7379668614984493`*^9, 3.737966869629064*^9}, {
  3.7397824874813614`*^9, 3.7397824907885675`*^9}, {3.74054916340814*^9, 
  3.740549164113141*^9}, {3.7405744547414527`*^9, 3.740574459405861*^9}, {
  3.7406483197494974`*^9, 
  3.7406483204670987`*^9}},ExpressionUUID->"8c2e1140-ea8f-4ed0-b1c4-\
1dc3b46cfe9c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"logt", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"a_:", "1"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Sign", "[", "x", "]"}], "*", 
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      RowBox[{"1", "+", 
       RowBox[{"Abs", "[", 
        RowBox[{"x", "/", "a"}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ilogt", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"a_:", "1"}]}], "]"}], "=", 
   RowBox[{
    RowBox[{"Sign", "[", "x", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"Abs", "[", 
         RowBox[{"x", "/", "a"}], "]"}], ")"}]}], "-", "1"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"logistic", "[", "x_", "]"}], "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "x"}], "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"semilogistic", "[", "x_", "]"}], "=", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"logit", "[", "x_", "]"}], "=", 
   RowBox[{"Log", "[", 
    RowBox[{"x", "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlogy", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", ">", "0"}], ",", 
     RowBox[{"x", "*", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "/", "y"}], "]"}]}], ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7386655187514553`*^9, 3.7386655260990686`*^9}, {
  3.738665564011425*^9, 3.7386656092359047`*^9}, {3.738666047117958*^9, 
  3.738666097038046*^9}, {3.7397873591428585`*^9, 3.739787364150467*^9}, {
  3.7404565633044405`*^9, 3.740456568156049*^9}, {3.740456599699304*^9, 
  3.7404566108065233`*^9}, {3.7405750032600164`*^9, 3.7405750036500173`*^9}, {
  3.7405752481200466`*^9, 3.740575251271252*^9}, {3.740575534903351*^9, 
  3.7405755353557515`*^9}},ExpressionUUID->"0e3afbc2-4587-4087-b540-\
78cee21a4168"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"km", "[", 
    RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"Accumulate", "[", 
      RowBox[{"p1", "-", "p2"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jsd", "[", 
    RowBox[{"p1_", ",", "p2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{"xlogy", ",", 
        RowBox[{"{", 
         RowBox[{"p1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p1", "+", "p2"}], ")"}], "/", "2"}]}], "}"}]}], "]"}], 
      "+", 
      RowBox[{"MapThread", "[", 
       RowBox[{"xlogy", ",", 
        RowBox[{"{", 
         RowBox[{"p2", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p1", "+", "p2"}], ")"}], "/", "2"}]}], "}"}]}], "]"}]}], 
     "]"}], "/", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7405748178974905`*^9, 3.7405748657593746`*^9}, {
  3.7405750090008264`*^9, 3.7405750175808415`*^9}, {3.7405750869863634`*^9, 
  3.7405751953139544`*^9}, {3.740575485373264*^9, 
  3.7405755099277067`*^9}},ExpressionUUID->"de86150c-a8a6-458c-b81f-\
56a030ed4f54"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"face", "=", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<face2.png\>\"", "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"robot2", "=", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"Import", "[", "\"\<robot2.png\>\"", "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "20"}], ",", 
     RowBox[{"ImageResolution", "\[Rule]", "400"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7406506619178123`*^9, 3.7406507069550915`*^9}, {
  3.740650752007971*^9, 3.7406508253904996`*^9}, {3.740650942843106*^9, 
  3.7406509541063256`*^9}, {3.7406510053212156`*^9, 
  3.7406510535253*^9}},ExpressionUUID->"d8e2b3bd-c1bd-44e9-8dfa-90c57ca2f7b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wd", "=", 
   "\"\<C:\\\\Users\\\\pglpm\\\\repositories\\\\plinkinetti\\\\comparisons11\\\
\\\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"label", "=", "\"\<meankm2hga\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parts", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "15"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"17", ",", "40"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73796694189331*^9, 3.737966988376969*^9}, {
  3.73978249776178*^9, 3.739782508385398*^9}, {3.7405491721783557`*^9, 
  3.740549173036357*^9}, {3.740574492120118*^9, 3.7405745042735395`*^9}, {
  3.740574570403056*^9, 
  3.7405746390743766`*^9}},ExpressionUUID->"632154d6-104c-44e4-836c-\
e920403eeb5d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"obs", "=", 
   RowBox[{"Import", "[", "\"\<observation_seqs.csv\>\"", "]"}]}], ";", 
  RowBox[{
   RowBox[{"pdists", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"pdists", "[", "i", "]"}], "=", 
    RowBox[{"Import", "[", 
     RowBox[{"wd", "<>", "\"\<pdistr\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", "label", 
      "<>", "\"\<.csv\>\""}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rdists", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"rdists", "[", "i", "]"}], "=", 
    RowBox[{"Import", "[", 
     RowBox[{"wd", "<>", "\"\<rdistr\>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", "label", 
      "<>", "\"\<.csv\>\""}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"wd", "<>", "\"\<points_meankm2hga.csv\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.740574645953989*^9, 3.7405747465429654`*^9}, {
  3.7406483443537407`*^9, 3.740648381263406*^9}, {3.7406494990867696`*^9, 
  3.7406495533592653`*^9}, {3.740673882037955*^9, 
  3.7406738885743666`*^9}},ExpressionUUID->"fdb2c162-6435-42f5-8002-\
a9ffe5d008bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"params", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"1", ";;", "18"}], ",", 
    RowBox[{"1", ";;", "5"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740674715456419*^9, 3.74067474979208*^9}, {
  3.7406796642851133`*^9, 3.74067966837232*^9}, {3.7406797010699778`*^9, 
  3.740679706857588*^9}},ExpressionUUID->"fe3ee484-00c7-47c9-bfca-\
f3cb33dbe532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "5.54085900616907`"}], ",", 
     RowBox[{"-", "65.5371749096527`"}], ",", 
     RowBox[{"-", "904.271753672221`"}], ",", "808.45054889162`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6.90775528550148`", ",", "0.556845545768738`", ",", 
     RowBox[{"-", "517.709728717804`"}], ",", "523.137875139713`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "6.90775528550148`"}], ",", 
     RowBox[{"-", "1406.00745391846`"}], ",", 
     RowBox[{"-", "1775.20540468395`"}], ",", "246.154681041837`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.46594224174626`", ",", 
     RowBox[{"-", "983.153128311055`"}], ",", 
     RowBox[{"-", "1118.93145111777`"}], ",", 
     RowBox[{"-", "5.11215714574278`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5.43509215116501`", ",", 
     RowBox[{"-", "6.72687509655952`"}], ",", "404.394970357418`", ",", 
     RowBox[{"-", "401.276235044003`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3.83951102490758`", ",", 
     RowBox[{"-", "4.96251549581024`"}], ",", 
     RowBox[{"-", "812.798464689887`"}], ",", "825.5819195883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4.39741183817387`", ",", 
     RowBox[{"-", "1099.49674226344`"}], ",", 
     RowBox[{"-", "1730.06145742536`"}], ",", "598.895158335567`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1.72155435790561`", ",", 
     RowBox[{"-", "913.905308803832`"}], ",", 
     RowBox[{"-", "1319.37848451281`"}], ",", "373.623152477903`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3.45679865777493`", ",", 
     RowBox[{"-", "629.028890654445`"}], ",", 
     RowBox[{"-", "1315.28113633394`"}], ",", "415.412758842111`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3.59977690507775`", ",", 
     RowBox[{"-", "551.341408595943`"}], ",", 
     RowBox[{"-", "2000"}], ",", "998.556463819894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2.16595244407654`", ",", 
     RowBox[{"-", "603.115099608898`"}], ",", "817.647730991244`", ",", 
     RowBox[{"-", "125.490319207311`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2.87135994076928`", ",", 
     RowBox[{"-", "129.35158153575`"}], ",", 
     RowBox[{"-", "973.603912787413`"}], ",", 
     RowBox[{"-", "705.614556153341`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "3.75802761316299`", ",", 
     RowBox[{"-", "484.161850467324`"}], ",", "437.782188251615`", ",", 
     RowBox[{"-", "950.99743501842`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "5.44910682849766`", ",", "222.81949774836`", ",", 
     RowBox[{"-", "1475.35753381006`"}], ",", 
     RowBox[{"-", "138.825973287044`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "2.9287938646754`", ",", 
     RowBox[{"-", "484.421614600878`"}], ",", 
     RowBox[{"-", "884.160221276962`"}], ",", 
     RowBox[{"-", "168.272825381966`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "5.1790141158305`", ",", "628.385843773955`", ",", 
     RowBox[{"-", "614.357855109586`"}], ",", "661.393637771312`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "6.71279596490596`", ",", 
     RowBox[{"-", "691.833359620866`"}], ",", "318.672697669135`", ",", 
     RowBox[{"-", "494.993540167841`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "0.976754516363144`", ",", 
     RowBox[{"-", "1519.86501637101`"}], ",", "354.372134074569`", ",", 
     "655.001198723912`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7406747239896345`*^9, 3.7406747505876813`*^9}, {
  3.74067969651477*^9, 
  3.7406797073255887`*^9}},ExpressionUUID->"2e55321c-40f0-4221-ac67-\
ae0a08cb4464"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mean", "[", "distr_", "]"}], ":=", 
   RowBox[{"distr", ".", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "40"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"std", "[", "distr_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"distr", ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "40"}], "]"}], "^", "2"}], ")"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"mean", "[", "distr", "]"}], "^", "2"}], ")"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7406647570335336`*^9, 3.740664827155657*^9}, {
  3.740664973000313*^9, 
  3.740665008973976*^9}},ExpressionUUID->"12d4e6c1-c581-44a0-910f-\
8276ec83e096"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"std", "@", 
   RowBox[{"rdists", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740649656194646*^9, 3.74064970419593*^9}, {
  3.7406499277131224`*^9, 3.740649969630396*^9}, {3.7406650240124025`*^9, 
  3.7406650251200047`*^9}},ExpressionUUID->"ad75423f-3c80-41a8-b1ea-\
19d7b043cf07"],

Cell[BoxData[
 RowBox[{"{", "201", "}"}]], "Output",
 CellChangeTimes->{{3.740649941019946*^9, 3.7406499701295967`*^9}, 
   3.740665025572405*^9},ExpressionUUID->"a384b25a-c566-4a1f-85db-\
9620b244c2de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myfontsize", "=", "15"}], ";"}]], "Input",
 CellChangeTimes->{{3.7406507220247183`*^9, 3.7406507228359194`*^9}, {
  3.7406508519417458`*^9, 3.740650861598163*^9}, {3.740650927445879*^9, 
  3.7406509280854797`*^9}},ExpressionUUID->"e8d48e6d-dd4b-496a-a3ca-\
2d14597be30e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plot", " ", "means"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.740673576323218*^9, 
  3.740673584887633*^9}},ExpressionUUID->"cadc8608-ee23-4020-bc3a-\
46b20f6d383d"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"plot", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "200"}], "]"}], ",", 
            RowBox[{"obs", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"mean", "@", 
             RowBox[{"pdists", "[", "i", "]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"mean", "@", 
             RowBox[{"rdists", "[", "i", "]"}]}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.01"}], "]"}], "}"}], 
             "]"}], ",", "0.02"}], "}"}], ",", "\"\<\>\"", ",", "\"\<\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "40"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"grey", ",", "Thin"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"red", ",", "Thick", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"purpleblue", ",", "Thick", ",", "Dashed", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"myframestyle", "[", "15", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"myaxes", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<observation\>\"", ",", "\"\<mean\>\""}], "}"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"mystyle", "[", 
         RowBox[{"\"\<participant \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"mylegends", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<outcome\>\"", ",", "face", ",", "robot2"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a4shortside", ",", 
          RowBox[{"a4shortside", "/", "2"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"expdf0", "[", 
     RowBox[{
      RowBox[{"\"\<means_p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
      "plot"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/b6JmX/nvdeOh9T+iYLpM01SIPp7xFxpEK10tEwe
RN+S36wCojuevNEA0f8ycgxBNKdNnQOIljl6wwlEM+ntcgPRfIunB4DojM9b
QkD0scfvU0F0em1mCYhWExSoA9ENWeJNIHpO74FuEG1gZTAbRJeZ2IFpQZ0b
60D0i+aiDSD6yb3SLSD63pfIXSC6ZJ7jGRC9a/6jWyDaZtKaeyC6Kdv5AYhO
K694DqIXeES/AtEaHzi/guglzhN+g+ia2if/QXRO9C/OXSB/hrvGgmi+XKs8
EN21t78YRB+7U10Cov9ejZt5AEj75YqtBNHKAeXrQfQnQf4NILpP9soWEB0W
2rIVrI5p4V4QfU7Z9BKIVtOsugmiQ5713gHRBzbc+nwESLvqPgbTACxh8l8=

  "],ExpressionUUID->"a8b5e501-3e1e-4d04-b1ad-bba1224c9903"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxstd", "=", 
   RowBox[{"Max", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"std", "@", 
          RowBox[{"pdists", "[", "i", "]"}]}], ",", 
         RowBox[{"std", "@", 
          RowBox[{"rdists", "[", "i", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minstd", "=", 
   RowBox[{"Min", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"std", "@", 
          RowBox[{"pdists", "[", "i", "]"}]}], ",", 
         RowBox[{"std", "@", 
          RowBox[{"rdists", "[", "i", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7406656747247458`*^9, 
  3.7406657298708425`*^9}},ExpressionUUID->"c3f9b29a-8c70-43d7-a1b6-\
ed76cf7412ac"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plot", " ", "stds"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.740673593951249*^9, 
  3.740673599333258*^9}},ExpressionUUID->"56003c81-d787-4605-b9d0-\
a190c83a5477"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"plot", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"std", "@", 
             RowBox[{"pdists", "[", "i", "]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"std", "@", 
             RowBox[{"rdists", "[", "i", "]"}]}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"minstd", ",", "maxstd"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"red", ",", "Thick", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"purpleblue", ",", "Thick", ",", "Dashed", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"myframestyle", "[", "15", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"myaxes", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<observation\>\"", ",", "\"\<std\>\""}], "}"}], "]"}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"mystyle", "[", 
         RowBox[{"\"\<participant \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"mylegends", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"face", ",", "robot2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a4shortside", ",", 
          RowBox[{"a4shortside", "/", "2"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"expdf0", "[", 
     RowBox[{
      RowBox[{"\"\<std_p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
      "plot"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740665661792323*^9, 3.7406656665035315`*^9}, {
  3.7406657345976505`*^9, 3.740665756453289*^9}, {3.7406657982301626`*^9, 
  3.740665845123845*^9}},ExpressionUUID->"bef745b9-b362-4e45-b6ac-\
c2be37739125"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jst", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"jsd", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdists", "[", "i", "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"rdists", "[", "i", "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kmt", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"km", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pdists", "[", "i", "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"rdists", "[", "i", "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.740666675626584*^9, 
  3.740666686312603*^9}},ExpressionUUID->"ddd90339-39c0-4b05-836d-\
a3423b50b765"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxjst", "=", 
   RowBox[{"Max", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"jst", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]}]}], ";", 
  RowBox[{"maxkmt", "=", 
   RowBox[{"Max", "@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"kmt", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.74066893657504*^9, 
  3.740668980117531*^9}},ExpressionUUID->"9e4d1770-d738-429e-bac2-\
ff8e7f11ac0e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plot", " ", "discrepancies"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7406736103156776`*^9, 
  3.7406736176944904`*^9}},ExpressionUUID->"33785c38-7aa1-434c-a1a0-\
34ca88597a70"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"imgpad", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"45", ",", "50"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"45", ",", "10"}], "}"}]}], "}"}]}], ";", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"plot1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"kmt", "[", "i", "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "maxkmt"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"green", ",", "Thick", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "None"}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}],
          ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "500"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"green", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "500"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}], ",", "Auto",
             ",", "Auto"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<observation\>\"", ",", "Black", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "50"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<K distance\>\"", ",", "green", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "50"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"mystyle", "[", 
           RowBox[{"\"\<participant \>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"mylegends", "[", 
           RowBox[{
            RowBox[{"{", "\"\<K distance\>\"", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a4shortside", ",", 
            RowBox[{"a4shortside", "/", "1.7"}]}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", "imgpad"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plot2", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"jst", "[", "i", "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "maxjst"}], "}"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"yellow", ",", "Thick", ",", "Dashed", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "None"}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"False", ",", "False", ",", "False", ",", "True"}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Auto", ",", "Auto", ",", "Auto", ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"yellow", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "500"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"None", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<JS distance\>\"", ",", "yellow", ",", "myfontsize", ",", 
                RowBox[{"Thickness", "[", 
                 RowBox[{"1", "/", "50"}], "]"}], ",", 
                RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"mystyle", "[", "\"\<\>\"", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotLegends", "\[Rule]", 
          RowBox[{"mylegends", "[", 
           RowBox[{
            RowBox[{"{", "\"\<JS distance\>\"", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "1"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"a4shortside", ",", 
            RowBox[{"a4shortside", "/", "1.7"}]}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", "imgpad"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"expdf0", "[", 
       RowBox[{
        RowBox[{"\"\<discr_p\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
        RowBox[{"Overlay", "[", 
         RowBox[{"{", 
          RowBox[{"plot1", ",", "plot2"}], "}"}], "]"}]}], "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.740666657218552*^9, 3.7406667265294733`*^9}, {
  3.740668868704158*^9, 3.740668908408429*^9}, {3.7406689883740025`*^9, 
  3.7406690012917414`*^9}, {3.740669062082219*^9, 3.7406693277284126`*^9}, {
  3.740669441583925*^9, 3.7406694857564516`*^9}, {3.740669523247596*^9, 
  3.740669526523783*^9}, {3.740669667747861*^9, 3.7406697471164007`*^9}, {
  3.7406698329313087`*^9, 3.7406700212990828`*^9}, {3.740670051948836*^9, 
  3.740670076219224*^9}, {3.740670112532301*^9, 3.740670113792373*^9}, {
  3.7406701763069487`*^9, 3.7406701931549125`*^9}, {3.740670294706721*^9, 
  3.7406704137635307`*^9}, {3.7406704577040434`*^9, 3.7406704673075933`*^9}, {
  3.7406704983673697`*^9, 3.7406705014295444`*^9}, {3.74067054190686*^9, 
  3.7406706267487125`*^9}, {3.740670665187911*^9, 3.7406707075663347`*^9}, {
  3.7406707777553496`*^9, 3.740670956566577*^9}, {3.7406710227723637`*^9, 
  3.740671209310033*^9}},ExpressionUUID->"19b9077a-9e02-4e4c-b775-\
88b0a55ff99e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cpl", "[", 
    RowBox[{"s_", ",", "m_", ",", "p_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"p", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "m"}], "-", "200"}], ")"}], "/", "200"}]}], "+", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "*", "s"}], "-", "200"}], ")"}], "/", "200"}]}]}]}], ";", 
  RowBox[{
   RowBox[{"cp", "[", 
    RowBox[{"s_", ",", "m_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"logistic", "[", 
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "+", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "m"}], "-", "200"}], ")"}], "/", "200"}]}], "+", 
     RowBox[{
      RowBox[{"p", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "*", "s"}], "-", "200"}], ")"}], "/", "200"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7406736599549646`*^9, 3.740673660563366*^9}, {
  3.740673706926647*^9, 3.7406738058942213`*^9}, {3.740718078490836*^9, 
  3.7407180860568495`*^9}},ExpressionUUID->"b39b3b70-afbe-41f5-8d63-\
4e8e19e5b9e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cpi", "[", "i_", "]"}], ":=", 
  RowBox[{
   RowBox[{"cpi", "[", "i", "]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "s", ",", 
       RowBox[{"cp", "[", 
        RowBox[{"s", ",", "m", ",", 
         RowBox[{"params", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"3", ";;", "5"}]}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", 
       RowBox[{"m", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "199"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.74067466435073*^9, 3.7406746955975847`*^9}, {
  3.7406747713669176`*^9, 
  3.740674820959405*^9}},ExpressionUUID->"43c9ab4c-e4f5-4c9b-89d2-\
806e200c2977"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"m", ",", "s", ",", 
       RowBox[{"cp", "[", 
        RowBox[{"s", ",", "m", ",", 
         RowBox[{"params", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"3", ";;", "5"}]}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", "199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", 
       RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740674836637432*^9, 
  3.740674881362711*^9}},ExpressionUUID->"fcf559c9-b3aa-49ce-ac26-\
1efd5d9790eb"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.740674914684369*^9},ExpressionUUID->"4dcb39d8-c29c-4153-a774-\
c1917dbf3088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cp", "[", 
  RowBox[{"5", ",", "198", ",", 
   RowBox[{"params", "[", 
    RowBox[{"[", 
     RowBox[{"12", ",", 
      RowBox[{"3", ";;", "5"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7406752827056155`*^9, 3.7406753062304573`*^9}, {
  3.740676041209549*^9, 3.740676087838031*^9}, {3.740676240126498*^9, 
  3.7406762425445023`*^9}},ExpressionUUID->"831d6560-d71e-4e32-8ba7-\
8d0e3b7adbd2"],

Cell[BoxData["3.7274673827683715`*^-180"], "Output",
 CellChangeTimes->{{3.7406752942964363`*^9, 3.740675306636058*^9}, {
   3.7406760461391573`*^9, 3.7406760882592316`*^9}, 
   3.740676243636504*^9},ExpressionUUID->"fe1f66be-8d23-49d4-ae8e-\
1f73368ee927"]
}, Open  ]],

Cell[BoxData["Gray"], "Input",
 CellChangeTimes->{{3.740677141904682*^9, 
  3.740677142793884*^9}},ExpressionUUID->"9bde8f3e-2c06-4909-9c17-\
d571a6fd854e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plot", " ", "changepoint", " ", "function"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7406736226084995`*^9, 
  3.7406736302837124`*^9}},ExpressionUUID->"f417e9da-ace0-4c13-9b07-\
a83f3e54054b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"plot", "=", 
     RowBox[{"DensityPlot", "[", 
      RowBox[{
       RowBox[{"cp", "[", 
        RowBox[{
         RowBox[{"s", "-", "1"}], ",", 
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"params", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"3", ";;", "5"}]}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "2", ",", "200"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "199"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "201"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "201"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"RegionFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], ",", 
          RowBox[{
           RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "200"}], "&&", 
           RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", 
            RowBox[{"x", "-", "1"}]}]}]}], "]"}]}], ",", 
       RowBox[{"BoundaryStyle", "\[Rule]", "red"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"GrayLevel", "[", 
           RowBox[{"1", "-", "#"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
       RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"mystyle", "[", 
         RowBox[{"\"\<changepoint function participant \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"All", ",", "Left"}], "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"v", ",", "Black", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "50"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"m", ",", "Black", ",", "myfontsize", ",", 
              RowBox[{"Thickness", "[", 
               RowBox[{"1", "/", "50"}], "]"}], ",", 
              RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}], ",", 
            "None"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"mystyle", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\[CapitalLambda]", ",", "Italic"}], "]"}], " ", 
            "\[Equal]", 
            RowBox[{"Exp", "@", " ", 
             RowBox[{"params", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.9"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"expng", "[", 
     RowBox[{
      RowBox[{"\"\<changep_p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
      "plot"}], "]"}]}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7406745999538164`*^9, 3.7406746153978434`*^9}, {
   3.7406749416568165`*^9, 3.740675085178069*^9}, {3.7406751533501883`*^9, 
   3.740675174784626*^9}, {3.7406753453397255`*^9, 3.740675355807344*^9}, {
   3.7406753992846203`*^9, 3.7406754037306285`*^9}, {3.740675448426707*^9, 
   3.740675481373965*^9}, {3.740675512059219*^9, 3.7406755124648194`*^9}, {
   3.7406760964492455`*^9, 3.740676096714446*^9}, {3.7406761634679637`*^9, 
   3.7406761705815763`*^9}, 3.7406762708897524`*^9, {3.740676323773845*^9, 
   3.740676330481857*^9}, {3.740676374957535*^9, 3.740676381743547*^9}, {
   3.740676438746047*^9, 3.7406765936241193`*^9}, {3.740676637288596*^9, 
   3.740676774663437*^9}, {3.7406768750350137`*^9, 3.7406769427235327`*^9}, {
   3.740676987604811*^9, 3.740677000599634*^9}, {3.7406770459957137`*^9, 
   3.740677075167765*^9}, {3.7406771465388904`*^9, 3.7406771681449285`*^9}, {
   3.740677235459047*^9, 3.7406772618074927`*^9}, {3.7406773098399773`*^9, 
   3.740677344847439*^9}, {3.7406774710360603`*^9, 3.740677488991692*^9}, {
   3.740677573668641*^9, 3.740677574745043*^9}, {3.7406776664274035`*^9, 
   3.7406777321815195`*^9}, {3.7406778479035225`*^9, 
   3.7406778875743923`*^9}, {3.7406779842477617`*^9, 3.740677992796577*^9}, {
   3.740678100344166*^9, 3.740678106599777*^9}, {3.7406784204109282`*^9, 
   3.7406784209257293`*^9}, {3.7406788036432014`*^9, 3.740678808120409*^9}, {
   3.7406788971653657`*^9, 3.740678972529098*^9}, {3.740679173989852*^9, 
   3.740679203879504*^9}, {3.7406792499619856`*^9, 
   3.7406792520991893`*^9}},ExpressionUUID->"0a121017-a9e9-44cb-a069-\
e06fadb52e44"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7406788892249517`*^9, 3.7406791995114965`*^9, 
  3.74067924685758*^9, 
  3.7406796853295503`*^9},ExpressionUUID->"8f587efd-42c1-4715-8dac-\
9c6ee8943d20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expng", "[", "\"\<testme\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7406775153401384`*^9, 
  3.740677550955001*^9}},ExpressionUUID->"05777e1c-cc50-47a6-ab34-\
77c0180ea44c"],

Cell[BoxData["\<\"testme.png\"\>"], "Output",
 CellChangeTimes->{3.7406775237485533`*^9, 3.740677554340207*^9, 
  3.740677586211063*^9},ExpressionUUID->"7906f0d8-7139-4df8-918b-\
04cea80182f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"cpl", "[", 
    RowBox[{
     RowBox[{"s", "-", "1"}], ",", 
     RowBox[{"m", "-", "1"}], ",", 
     RowBox[{"params", "[", 
      RowBox[{"[", 
       RowBox[{"6", ",", 
        RowBox[{"3", ";;", "5"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "2", ",", "200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "1", ",", "199"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "201"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "201"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{
       RowBox[{"2", "\[LessEqual]", "x", "\[LessEqual]", "200"}], "&&", 
       RowBox[{"1", "\[LessEqual]", "y", "\[LessEqual]", 
        RowBox[{"x", "-", "1"}]}]}]}], "]"}]}], ",", 
   RowBox[{"BoundaryStyle", "\[Rule]", "red"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}], 
   RowBox[{"(*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"GrayLevel", "[", 
       RowBox[{"1", "-", "#"}], "]"}], "&"}], ")"}], "*)"}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "Auto"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"mystyle", "[", 
     RowBox[{"\"\<changepoint function participant \>\"", "<>", 
      RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"All", ",", "Left"}], "]"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"None", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"v", ",", "Black", ",", "myfontsize", ",", 
          RowBox[{"Thickness", "[", 
           RowBox[{"1", "/", "50"}], "]"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"m", ",", "Black", ",", "myfontsize", ",", 
          RowBox[{"Thickness", "[", 
           RowBox[{"1", "/", "50"}], "]"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "Auto"}]}], "]"}], ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"mystyle", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\[CapitalLambda]", ",", "Italic"}], "]"}], " ", "\[Equal]", 
        " ", 
        RowBox[{"params", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "0.9"}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7406784398953624`*^9, 3.7406784849014416`*^9}, {
  3.740678772833147*^9, 3.740678773925149*^9}, {3.740678985461521*^9, 
  3.7406790372224116`*^9}, {3.740679087845501*^9, 3.740679148717808*^9}, {
  3.740718106726886*^9, 3.740718185943825*^9}, {3.7407182197646837`*^9, 
  3.7407182414955225`*^9}, {3.740718295970818*^9, 3.7407183277948737`*^9}, {
  3.7407183693377466`*^9, 3.740718415624028*^9}, {3.740718515716804*^9, 
  3.7407185317380323`*^9}, {3.7407186700800753`*^9, 3.7407186771312876`*^9}, {
  3.740718719766163*^9, 
  3.7407187419338017`*^9}},ExpressionUUID->"945abbad-4555-45df-a744-\
1aae34d67869"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
uWLEy6H/tXj3JJf5CzLmB/pQG3+5Ee/V90dtF9xE7QfiQSP+g/0D+Rfr4BT/
wX6BvAvsFP9xvW8gxucU/8F+gDy7xn8g/5BfgZ3iP5B3yKvATvEfyDfkU2Cn
+I8mz6Xm5+I/kF/In8BO8R/IK+RNrI9T/AfyCfkS2Cn+A3kU9ssY4Sc1nBuT
S/YD3XfvcYb8tVNdxpBesnJ/SMRLztA9zT3kz0xx4/6DhyM+wf0Nx6+N2/si
HlASQfetmkTTfSuy78c/XhxH96vS4she9Ewie5Hs58Vh64Wdu27IG6lkP/fJ
JPv5fgbZT1lmsp+4/Sj662Gh/pL9dye/Kofsyf05ZP+ts5H9J+2r3osprj2k
T0Py1zKJt/vubi3k6511dO54c93LVL6f9Fel/1m3qr28z+ou74sSj38WR+eG
t2f1ovjP7J7yfmdfut/J/TnHO+DpA4LJv9oeRPGYlCCKx1Qyuv/4Wgj5R0sp
37GocMIHB1P5EYOp/PVBNP+vR9D8fyny7Z7pYyJ8fhiVf2cYlX8q4lAxm/8j
0nO2mU2Ev44l/HYslR8szvWOzqsbS+vXKY7W75rEwYmEayRS+SMJVL44gdZ3
cyKt79hEwgdSCM9IofIpKVT+1RRaf/9UWv8nEsdnEH5Zvq+9mE7ll6eTfPyQ
QfLxQQbZxzezyD4+JN/PlmWRPT5ffG9e6m2m96rcnxD2/eZsxzg/21oi38cW
ZlP51GySr+vZJF8/Slwg7fUk+f41MIfqayO+rzq5Mcdxv7PHGW7vC3kcIO3v
1vJ9ay35vvWSleRznI3kM95GuLqMX5y3U3377FR+pd3RX1vxcbEPO5eU0r3v
ZI/mFE+V9sh4j3ZCftfL96HL5PlPsz4tqf2EXGrfN1e+h/eU7+HbU/xBvpev
kufbfmN6i++JXN84vmc+Iru6kO5/7d9A7+dv7KDz6+W2A8JO2T+W6yMRD5gV
QvGAxiGEd4UTZuFU/sxgKp8+mOR/WQTJf7sI8vfpfUCrDnRf58aDm8Oo/JvD
yF+vNJG/vshE+E4s4U2xVH5qLJUPiiX+sMQRf7SPI1yYSNgvkcrXT6Ty5Qnk
T19PJH96bSLhWtK//j6FypekUPnYFPKPx6WSf9w7lfDHGYTp/HfXzNYZVJ7r
U+HfP80g/57ur93JbyD9X7q/t+rk0Sxa/03i3pDf0xAz8Y+HmfjoUDZhei96
J39BNr2HmpBN8l/XQnx+VeK50j8dm0P1peZQ+QHie0W7ihyS/3U5tB+Spb/Z
z0bl29qovmo2kv9iG+2f0RK7yXgdvZeqaHfZTuX32B3r/XfpRaFfdmz5TvDo
sesPhJ5Z+McJiuP1ftRJyNsX0t+JPkD3aj46QO8GuizzE3rLKv3V2xPofKD1
rUA21yGfF+n9SaH0X/0+Ir2fWH8Q6au79P5kzzjyf4qWRAk9/lnrKLqf/R7F
0euEUpzd9ksMyfOCGHEP3K0hxcU7k7/rOz0rgfi3bYK41x08n+LcJvJ/92+o
Sib5XpXM2jnqa0Nx67FnUyn+NSad+LgH3fuevjKT4t3c3xHx4H9mUTw4I4v4
8hMz8SX5y7tnBmcTP7fLJnlMt5A8+ltI/uvkkPz/ZiH+dLcSf9awEl8fsBJf
r5Hx4is2ks8fbLQfZttpP7xpJ/74WvLHQoqnbv5XTbEenZveF+c/jxfVF/P/
6+IarPLsb5dmd5L3+h1/b+pqZfqQ8cb7TNjDa5ctrZ+4rAE7u9z906Qtxvu6
xaf/aPPhUeP9JJXLY5tK/7ZXZL2u7PVGj3dN3vlyMNs+e9QnfZYa7yVhn2+5
3uS7Zw24/xN6q/HVPOM9JNrf+EeP99pWN7F/bfn8m9/u29mED5eHFU1tx5Z2
n/WPBctN7OhbVz99XNyaXXhvyuIDveLY2FtPio906c0GPrzl7mXLZCdvNOvk
898mLMz7dnzXQjO716jeuF+39mBeJ0Z7VtuTyB6dZ0+LFwWxhEkjC/pnZrPt
DyJW19nRj+V3sWzoFZ/Kth14t+c3SwezAi/bjjjvHNbKZq+/7kII2zAlrl/e
5Qw2sfT73EvLhrHFhzNqjLppZWeGrQr8+UoEm3ht2fmD/c3s02E1D30QG8u2
T0wcNG2LnR1cMm7b5LsmtmTuYq+qGhb2TujyvMXHE9jOgLn5NQ/ksPR+YbU2
Jqawc1dnbHQrsbGAbleWfn8yndUsef9un9RcNqv4uyXX1xnvLaN9zkzwNplZ
hxXVNm1caLzfJbvbxHYtqP1sZlUL5V/26tqxdoS5E2u0/K9rD84Z78G7Jo2z
rFpr/L0w8cP5OuRD+8ArXr3U/ZqvhjT7Y/h3d9X73T+H5166ubwtyz/YNf9p
W+M9b2GHN1b8XNt4z0txCzMLHNIof0xxN/aPCxeH/JGXy/qOvjJx3fsdlT97
bcK2ad5ufizqxXunkgviDP979/i4+qEJSt5EfVw/RHz1ge2rekHKnyxvXlnw
MMCXTX93/cX1159/71tYp+t2v97Ge9+lXXzqHi8KZTPH3v9x20tJyn9f36Eg
LP+U8fe4cF/pzvKTq+4+G8TW+nZPy9z6/HvgrLF57mdnG++BB7q9F9m8MJId
Ov1gR6sVxnv0m7Pf9v1xTLqSd8zv4nldbvjei2I/Xttw7KWi598LN7Zuz2n7
ofFe+O/a+XvX9I1mL4U9XD8pAOdqJrZg0o6S5u8bf98K89/uu8AWA+7FsOtL
fYbuHvb8e+LTq+sc27jTeE8cNblZ3o+b49jKn58c+mO48b54q0/Ai3tNxvti
zG+BX9XXaaMT1P5fdn9H/Rvdkti+j94Z/G9f4/3xiUs7iya0Nt4fY/4ObJ6T
+s/ryYof7o+yr224OpX9FvBs97Aaxvvk+58EPvG+avw9KMxPuy4DnnxqT1f8
EXm1cVQ3z0xW98/J/aodNN6/txi6e9yJzcbfd8L4/Y6OGZY5Okudd/134mcz
kg90ZrtPfpjw5QjuZzYs+NoU3YX1Ojq2Z9sFPF/EzMnD87zZhOyOCyub2tnh
Q++O2HupOqvV7e1zlx/HM9/KwL0PfQaw1l89KhjYnduxe7xSkkL6MvuRqkWD
QixswOgfRn2SxfXku8OHv/pxMjv18/lPvmgdxqYVXjhrbmBlD1Pqfv5tziD2
8c+pf0W5pbNFu9sfPNR2CFvrecpj0k82tj00ovJabhTLm+e169uELNbt+Kap
k+ZEs4OHfsqbvziXBb7yQ52PymLY9MA2tU6/ls0alce2Lm4Wz9ZVvRJ+74qF
3dj5V9nnXC8eKmk8s/EGKzu4eV70thZp7LZ/vZ86TbCz9St9rx9clKnmp8ZH
Q8NbHPdgJyZUnzwi1Hhfu+vWZx4rfzfe1y58sd2vf53KZZO7Nkv6PdSHPZth
73T+fTsz++1pW/awueKvOvbTHkGTYlktr+IVRSuN98OHIs5nTTlivK/F/Yf1
Pe42WL+jFdvn9m3w3AzjfW3Y5/NOzOqYy+pUup2v9XM0e/zgzWmf9Dbe02I9
79Qd87jg0xj25wFT/tr/Gu+XXy31/LXp1GFsJdtvi2vakPX+fOyzFu9mMFNe
6NPxv90JPPvFmnpBR7LZ4hu/h7YO9Ge3Hnl3iSq1sLW/N9+xzD2YVY9eHpW6
MIdNP7clccv/hbEmX7QdnftPKxtxPOnOAc9w1v7RkpJxZhuLKv97xrkVQ1gv
U8uyd8PsbH5mRcnDZiZ2pFutt3eaYtn8R2n3t69+nW1/vOl7r3pm1qXX4a9K
RnZjL793t8af5xJY80PnzC9tDmQpv1yZ4T06hUVG97iy8cxAtrTzieZp1TNY
A7+xrSrPD2W3d+WY9u3LYtYmqSurvxXDmg1Pn3dhdjYbWOdxcPO78ax3s4TK
x9xP8ny85EynCcksaWdUm1fcbaz2bf+CwL/T2MTcQTmvV9nZn2NG1Vvtn8Wm
7/jug4CKXNZ54ys+3V8zsw1FDXot/1c0W9net8h7qCdbu8J3WUvPLLYha0hE
kLUt+/PE4x0nWsSz+MtLu1xZ35cdjO7+W0/OJ7/UXP3Sn/19WZ+ufwxquCqJ
DU8rjlySGsImTT17JKhfGus08KcpezIj2O7jh1PH789kdxfUT73/pYnVePn8
mONrzez4jDV3G3A977Hr5JabYy2sdOqQ2W3LEtnAvKOP6/lb2bzxNzr17pvK
cpseCPJ4wc7G58/cE74tg/0/nRwy3Q==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.], 
        GraphicsGroupBox[{
          
          PolygonBox[{{1307, 14, 1291}, {242, 243, 15}, {242, 244, 240}, {
           1291, 14, 1208}, {1314, 360, 1309}, {243, 242, 241}, {241, 242, 
           239}, {244, 242, 15}, {240, 289, 239}, {1309, 360, 1313}, {1209, 
           29, 1308}, {242, 240, 239}, {1246, 289, 1288}, {289, 240, 29}, {
           241, 360, 14}, {1306, 289, 1246}, {1312, 239, 1217}, {360, 241, 
           239}, {1217, 239, 1305}, {1308, 29, 1211}}], 
          
          PolygonBox[{{1288, 289, 29, 1209}, {1305, 239, 289, 1306}, {1313, 
           360, 239, 1312}, {1208, 14, 360, 1314}}]}]}, {
        EdgeForm[], 
        GrayLevel[0.23565545518937447`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxVVE1PU1EQve/5bqJAjTExTSmW0oi2rliIG2NSAwvFVbuhfBRaqBpB4Ifg
HzDgqiCrIq5ajV87Y4w/wK8VutGNbjRNbeI5mdMEF5O5b97cuTNnzszI0kZx
PXTOPYAcg3yKnEsFzl3xzj3D+QJsJ3F2sI1CEji+gj0PfRr2q97sh7C9gFyC
/RRsf6HzsA9BJ6AzkC7OaeibkA7ObyKL+w36LcTj/AN6E3olsBj0vacz82A+
z+GzAds6YznTazpnvPm3IrPxXwwyDPtd6BT0KnQtsPyGITcgbdxtQj+GXMP5
CfRBYHXuQjcCq60amn1c/i358I2m7vI/758QZlPC7RH0GdzPOou3r5jE+zqk
zxlOk5AwsLcqoeV0GzIRGJZ1xSFet4RnWjnGQ3uXvneEO/vBd14Ck3eR/f8F
PQ3fAdgHndXf7yzPWdhj0ElIDedlSEF5XHZWY1w4MNYizhed/TvnrTej3vJi
39jrtLeejkBvBRabOMzg7nZgPMio7q7u0CemfJgjc2XOCeW6oh7yjTX1mbk9
jaz+495yY69ykN+R+byHHvTGgYQ3DrRVe01YE2fym719HVmtccXKiz8JcSel
+9/FYXL5p3Am3sSvqxwK6n9SfNgVB4gBcSG/2Vv+8+JjUxw70HePk4w3rjh7
8meODfGTuM0JO/KoqvwXFJ958P+8fPg+v5lbMbTeFxRjNvy/HwPKmXe3VEc5
tJxKofWVPeU7fI//+8Uz8py+C8KCb5R1Zp7sGblETi0qJuOVlOfXyOaKu2dH
8+DFw4pqnNJsJ4R7V/E4Z2c1a9xx7N1HxMt6s3/AeSk0TnF3NSOz839bs9qn
Gp3it9SjmLhLDvOtQ+UZ88YZ8qW3D7uKv6+5JVeIOd+mnX2uCIeCZjAnzB9q
XhrCnfV+jqzeMW+4loU562BMzhPvbYtjtBVl577clC/35X3Vsqf+kZ/zmlPi
T7x3FKcu3mblMyc+nPcW509ku6kj7pDbdflPaOZ7eCyrdr4zo16PaT6/RIb5
9BGu1pVDWTzNaT+UtCOKsieP7A5ykHtxUm9zpqrabdwnq9opNeEzpLxqOncU
lzH/AaU7roY=
           "]], 
          PolygonBox[CompressedData["
1:eJwlkTlKA0AYhWdkBlxIZ+MSNXHDLZUHELTQpPMI4oILyUH0CnaCnWAXdwXF
ygO4pdLGNNpo6/d4xQfvnzfzb1Naa6zWO0IIZUhQyiHsxBD2oYi+5XCB8yZx
hbgP1tG7cIf3AkPoFejGG4Qt9CKcJZ/JG4Y34s5sbxNayUgrZz/ep5pAH8IU
cS/UONpWDvQcnEb3dMPdH+iKPpM3DUfoDF94o8R1dAPG0OPZWjmVWzNoFs08
kl1TtSfxz/F6VJ94AwbQs3ASXfM7eSfaTQF+iWeIj9HzvL8ivk7WeqO3TeK9
6JzK/Z68myo8oC+Ta2sGzVJQz9E7ecRrJ8+mGqr1TFxEL8M9+im5lwOYwP9L
1tqBdqE/1d+qh3L2G73VH76iL2Ap+g/1l+pJvamHD/Q/pnA5dw==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0.5415307548407677], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNVllzlEUU/Tpze0ZCiQUVBwqpsqxMdpbMJCSYSoI7CYXiBBwhCSCZJ1/0
xyB/xQfL7QHKJ1/c13JfsrgENSJq9BzPmcKHW/dOf92373Lu6blv5fmF57qK
ovgKUoIsQPakomhCvwB9E3ovZBF2A3IS9sFcFIdgvxrayzOLkB7Yk0n2I9hz
P+yAribZK1i/C3oMcgJ2OcnPcdgPZ50toNvQU5Bn8fMy9DGfvQQ9Yf9PQR+E
TMNectxnIEeSvnGd389CKpBhyJmkO3t5P+Ru7DkA/RhkC/Y90I9yD+wHsnzd
QI47k2z6bEEfdsyHsacO+3XsOQ896ry6k9ZZK+bX8v4L0OOuLet21HYLDbgB
u79QHJVCsVVt3wFZxfd1SF+hnqwl9aXmb31eW/X6M+4Fe8I+XnUvbxW6i/v7
unRmH+wN+6f9UFZsfyGvTdYT+xpY/zp0/jr0cewZwbeN0N4LzoUYWYLscu1H
XP86vs0UquHHoViuhfp5MakejGfdOVx13DucY9U45NoVr297vbdQT55Oqj3x
dd69uDcrnh7oz0O9n87Cy5JxS9ws+/fb2LOPeMWeX0M9HYf9XggfU7DnfYY+
5qybzo+/ee+y4yDe3w/h7AjOnjL+GHtXFrYnoV/Cnn7YQ1m1o/+TnpFZ6DHI
jyFMj2HPHyH/D8J+JYTvEdhbIewRm9uu70SWj3nHt+J55Fz+HMIoZ/oL2DX2
CvY5Y57Y/x7rg5x/rL8Iez/sAdjfwR5gfFl9qLkX19zfD0N5zDuX68bPp9Dd
WVj7KNSf3cYM73kSUjJ2mpwr7OvP4qA343bd6Ze5LnrWhqAXkmrFvp1z/OzB
nHvEGp+GJM/isr+vhc4P454fQncT47+E6kA+uOiZ3WOM1oxJYptzwhkhfpkj
54u/Z40L1vWU+/5aCK+Hsur3eFLdqGu2b4XiO5o1r5ue2eR5JFdc8Yzs9dzt
ch2SuZScOmhuYUw9noU+92u7wzNYaxfi2yeSakT/xDox/25orlhv8tis4/7W
/FB3vowruQ5/mxfIJTXzDDFB3BA/74Tqx7Ojnqf/OMOcRx4su27bxhVru+Fc
mHvV3Mi54nx9EOJyxtzh0apzfCOU251Z+KbfL7H2SQiHxCMxN+D6jxsXTdd8
yLhiP/jtz1C8ux1z09gdNY+Qd8ktU54z1pazznW+ZZOe/VJW7ateP5Z1ppKd
d1L8E8YdfZKbyFFvxe13i7Xim3bA+4l3xn/CsTAm+icX0Nc/IR6k/89gl30v
7+cMMN+XQ7M44Hnk27jfd7WdJ3mTnEXMfGOe23LNiW/ifDP8dnWp1sRJyxiu
mzeIn9OuM+vN79xHfBE7NZ9dsx/OH3E9aD+8hxglPmtZ89CbxY/kyZuh/S37
rJhf2K+SZ5l2562a9uw2zL1znmOukVNmzPN8c+q+u2pcch532CY++b+DHFv2
DM16jtjDtrFBPr7cwUDS+935P3Xpf1haMZ5mXLuGdcW5kP+GjdVlz9VZ96pt
DDSMae7J/p/G/2t8V/i+/BR6S+hn3W8O/bMmfAvJrb+F8ii75lzbabz1uv6/
+01L5pNB44hx8i3h71XzQMlzN+w6MTbWqtucNuO6M4Z/AShW3+w=
           "]], 
          PolygonBox[CompressedData["
1:eJwlk2lvTWEUhc977Zc0aVFSblSIuK3Smoei0W/4glKzGus7v8ZvkYgiJIYa
G0NrinmqmqcqWs/K+vDcrH33Oe/ZZ6195nQf7zxWKoqiHQI+8dOSimIn9KLH
5aJYjT4Ct6hfQSN6C1xCn4f16Hq4h/4Fy9D7oJF7h6mXo/dDHfUY9Sr0IbiJ
/gKL0LvgKrqaazahK/CM+g+sQB+AG+jn4d5muIiexfW16C6Yja6CDeiZ0E9/
IKw3wgX0BPpr0UehL/yfenPhKfoHLEHvhWvod9CE3gaX0e9hAboTrqBfyA98
a8LEdZw9RN1MbwfUUk+FPclnfqc3hXp38jufDb+z3n0hfA4/Q8/SGR/QE7m+
I9nzU9STqLcmz/Q27IG8mAdvwpkpu8XwLTyDZlGmH8Mza/b5MIieRv9gciaj
4UyUTSuk7MyV/RrI1NPhcPJOlNBl6E72dHx2xspamY1w72Tq7cme9YQ9l/dl
uB3OVNmuhH9hz+W9duY3+np4l5bCT/TX8LvJU3l7N7x7ylzZnwtfK4/ldZH9
LppZs78OeyUP5eWZsPeaUbP+Dc8iT+TNk/BuaCe1m6fD3ikTZXOHekbyN6Bv
4T4M89gTyih7J7QbI/z3kt7jsB7STtBrg0rJ9zwM/6demfpR+AydVUV9krom
+9vTzmn3GrJ3X99cBf0gfK/O1NmRnZ0yUlb/ATbTbn4=
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0.8474060544921611], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxN3Af4/+XUB/DP7/v9NNBDQ1FoeqyWGVmlhVT2fFA8KCQaqLR32qk0NP5E
SUu0lcoI7aG9dySRyig95/U/7//lua7ffd3nc+5z7/s+91nf31Kf/vL7NpkM
w3Dk3MMwrXyj+liogA0rv7fSYYVbr9Ktld5d6cOV/lj471W+fqX5x2F4vOi3
nRmGVxZ+ptLTBT9V+Pkrv7zyBSs9WTQ71vcDVX5U2lmg8P8o/PaFv7u+N6j0
uUorFM1ThftXpdcW/IxK81R6sMq+VGnTSgtV3aer7s5F83CVHZ+691XasNLG
lVYq/H9VelalueYahoWL9sqqd02l5xV8VeUfqLL3V7q7vheu77kq7V7wXwp3
Utp5buEmlXYt/Ey1s1DlV9T3HVX2kazDq/VRaVrpD5V+WbhZleapMf626H9T
6a76vnPotftFfV9Q6TsF71k0e1T6StV7rPJbCnd4pdsr3Tb0es1V+F/OdL37
i+4XQ9d9RuEvL9xllf5c+B8NvRbPLPyL6vvKwv+74HsL98NKpxTu5Eq7FP77
lR9baYeCt6uyfSr/RuUHF/1BlTarsn/UPOcr/KWV/2vaczh26P5+V+kHQ7d9
T/r9U9X51dD4hyadm++8VfeF9X1J1bmpvtfMuXqo0maVvlrpjurjCWsz9n5/
LmfCeXM+PlvpHQW/fdJ929eNs9/O3IdzRp0H5+CLlY4p+OhK21X52pW/s9IV
M32mnAd17Zs91ddaBa9pDjmr9viTQ+/r+tnvvQveq9LXimanynestNlMn6FN
c0aPKNzhlbYp3CI1n3kr7VnwIYU7uNLWBe9e+W6Vtpjpc+pMqrtOwe+qdG3O
oXP/lUoHFLx/pS0L/+Ckz5ez8beCT8u9uNb9qbRypWdVn/fXum9e9NcV/Fjh
LnL+J73P7vt19r/yBStd7l5VWrLSjYXfNfAyBd9fbdxbab6q/4eq+FXnufAH
VfkalS6pNKadA6ps/0p1VYarKi1VaflKLy36Pxf+T+ZbxH+qdr7uu+DRHan8
lqL5ZuifXd+PFM1WVfYKd6PyRytdX2VvTL+PWltn0VzxhML9uvLbi36/rMNy
znHRPFHpOVX2aLX5DWe98F+vtErupz23pvtV+b6VNq2yv1Z+oztR6e76/vbQ
c9628NtUwjzvqXTR0GXnVxvnzjS8c5XvVOnLk17s51d+unta8HWF2r/SpOBF
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
wVe2rrYuxFeDd9fPx0+qbOnK78uduXPa8h/Zj77AFnFy7pF75U6dSg4kf8/0
vSNX7hg+vn9o5grsmByYunDWzh3dofLnR5Y5JOUHZgxHjC2zav/KKr+i0oun
zSvou/RTNpjjw+sWZ++atqx/ORmbDlBpJTritO1mbC1HZe/UwW/IieotNu2y
Zbyd09Zpjxxbx/5uwT+mj0wbXjpt6/vSyi9JfXagQ8L/F5323Mj9y1e+XPT2
a+k+lVaYtmyEx3hv2XVOy5l8aebq++ixddQTI6t5K7yfV1f5VZVeXull065D
F72u8t9nzqdXem2li2aaD9PV2BW/P7b+Bo8X0X3pwvrGk7zpbGbWjGz/qoyX
fvH6rClb5PfGtl+cN9O2rvMj76mD35ODXj3t+vSTn1a+YujxWDYPdpVlcvac
dToWPY+c/O6iXWfa3+yUbDSzCv+mwr1h2t/Hja1zXlzwm6ddxt7KTsjWeGzR
n124d1S6LjyF7fB7ld9UuBsrvaXSmZXeWunS9MEWxLZ2RuFWTvtsg/Raeu4P
x7Zpov/R2PbWq/CRyledtk2WvZH9ld2VzfXq8Ksbqvz6zAFfo7fSwdeq7zWn
rRuvmnGxs9LzLsvYla827bZuq/zWSm+395VeUemMmbYf0vvd2Q8W7gPT1u2t
Kd2OLsnGcH346ruqfO1p66LnVL5upZtnWh+kQ7MnnDK2Xg3/nmnvDZ38pLFt
Ddb2rmnzjvdWuqPS7dk/sile4q0+t77fp3ymeQz9nj3hnpnWRdk/P5A22B7o
2XJt/Hhsu4C6a2fe5sDuqS4dFu+4L/yHzHJP2oS7d+Y/9k3wUkPbltCwL91i
fllfNtqzc+eWyz3z/fBMv+XqLp933bvv7f1bYHLLAzP9pkoPh579E+xtJtOR
7chIj8y0DLF02vtz2mHz1Ka3/8mZllfWTL3HUvefMy2LeMv/PtOyF/wzJ23j
/tTQue+FU+/xmZYJyGhPpM3HU6Yv7Wl33rT3j9Co8/e0z6b69/RrjI9mzMZu
PtaDbGXMZCry1b9n+t2Ceyr4fwcml1Dynp75j58JTN5TRxk8HxPYGz+ZtFwI
NtYnM064SeTFcdK2+zl+GvAG6CftY9gguLkCzx3YO80P9WTGxr8zBm9v7w+/
mtOH9vkrtMmnQNaYN23yYc2bvZgn+zLH76A/tD+ctm1vjs1L7l7sNW07NJsL
+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
X632tMuuckvavzLtfDf0ct/i9rTH56fNc9P+nHjgU8dem6OzZ+6U+OvnTTsG
W0wB//v8Q+eLBj59bF721tAvHPwhqcNmJcZSGR74vMBo+PhflLPxk7F5KP4p
DmKx4I0DzGa5UORabwdei54PAm8ypkPCh7XFX4NPnja2r1a8vLj5AmfzWmMW
1/HCafenr0sDH5YxKBMvgdY8xYLwe/OTfnnoM37i2P5lPg7+6+8P7WPiQz9m
aH/33Nlr/hHn/oTwW+NzBs8K3t5pb3a7Q98nfmL3C595Ts7tqeFZeA59/Adj
xw/QZ32LM4AD02HFJohROGLoMfK1G6ffUh2fM3Vmxn9J9Et6C35wWt4b7wLc
CWPzG/ED8+QciovQB1+WuYohMHdto/nu0PXUp/u4E2vlLli7NcMr3Ll3ZW3J
iTdGVhQ/JRZ8icgy+Cd9WTw2/M5D59eH5rrAO4QWz2VDvjxlC6budaEXSyhO
XVyZ/NrA4oOuyLt8TfBstmLQfNdQZ+OuCT3di05Fn3o8/W4RGu2ylYkdujqy
hNw3u+WVgdn9/FbAd/3Nlg2MgU1wq9RF7/dY9DQ+UmWXp6636bK8cfRpOjbd
mY7MpkD3N67H816LH7TOSw6tz6LfJbqh94j+KK5crPnu4UO/DT9ZMfM0x9PS
PvsD+wnbEBvUUYHZXdhS2GvYZ9hw2N3YlA4KzP7GpsW2xSZG36J3bRk5wby8
1/uFhu2LDZCdlP3vsLTP5sOmxIbFfrV7aNgJ9w6erclvE8X/8hHsmjPsjojN
EWOzztBxQ2KBXj90PMiy0/bDsgV4N9kH+EhfMm0/qdgq3/Qa76fYJm+oeG1x
23iyeCrv66y8s951cVBsKPpiexGPpD+2l2UDe6P1583mF3rntPmR+3JbYO+m
dwuPujb52qEhixgP+QSt+uJM3GHvKF+bfl6evozlZZm7GCWxSh8cur658VuJ
P3rltGOQzPvFoX9J1gGMZoWsJ/uFtWXrwBvwEfzBWi6ffp2v7+eMHRsYjX5W
TDvXBmYD0Zb2z817ai7eaDxxpfDDOW3NGjqG63XTjtfyPv4gb6XfaILpQfbA
XE7I+ff7CmOwfstkT7Xx2qyJ/DWB5SsFvi40F2ber874jQkd3yYdlO5JD+Xn
pd/Ru/lAb8jbga96Sy6OjEHeIm88O/DNmfsZoXeWT88cyU5nhrd7Z7w3ZIZ5
gydn8hfx2fDXkIXIB7dHZgCLEeIv4jea7SsKvFLWjU/Q7xGs30GBNwtsPfnf
+OH4+ch3Z+fs+b2P35753dkXQ8OXtHXGw+fEZ8VfyG+1SWA+rU+nrriNz0+7
j52GPttn5y6snvl6W/kz+TL5MfmK+Yn5iPl5+Hv4ZvYODT8oXx8/Hx8fvyX/
pTnxc/I18jMeHDyfJt8XPxz/10lpk3+HHMSHt0/kCnIGmcYduiz3aLf0xfe2
Q9rhY3tt9vHCyFdkKe0tGNmOPv7b4PeNrMSnTl7iW9Y+PnNJ+iXb8CteEphf
8bepe2zWhI3eWn4+e8EHxM8k1p28JZZizm8H+VfY6bcNLOaWbi1OjixN9vJN
zvEbRnVfPXYMyUcCw304MB3509lT7X08bfpNI1ifdF50C+YMgOm/dDU6G3vP
V6d9Xulu9u5b2SO6Oz1fTL7xfGzabbt/YrTdQeXrh+Z/Mx7tw20QPDugb3H+
xvWJjPOLc9Zqpuf10YyZPGqO1s+Z9/tMvzuY/Zu2rO15gbXhXH826/CZwOjp
6/T2hZJvFHr5hjn/c+qwaWhv47RPh6afs3vxx7lXYq3PD+xObZe6+jJv83c3
reXmWU9tbBL6j2WO9u7LwdPr5b7dWW1vlr72SN/gjQOz6aH/Uuryw/DZzP6d
2rTjCfi4D829E3Nw59A2LPYrv79kP2I74h9nG2K7vmNoOjRi3dht2WzFkrDH
sQ9/LzTs0reFhm3Zb4LQrJv2yVsbJ78/fZ0UeM5v5pWRx8QyiYMUQ8mn6rd8
/IN4Kb2OH5g/UBn8rekbz7976N/+s2ttkO/1g7s3eDE7d2Xsx6fsc8nvDvyj
afO1s9P27Wn/I1kXcxQnJV5KHOL1Y8dViZF/YOz4Jr+TEGMlvkr8oRgocU5i
MP2GUuwFG69YCzAZ+8GUfSXfYLL6w2PHOvmdxN/GjqPx+4k7x46T8hsL8V/W
Tgyb+I4HssZHZQ7GLN7p9uC+lP42zh7ekbX6Q/D6FXMk3khcofgdcTxiG8Vi
iMkQxyd2ibAtLlJMk7gZMYRH5eyJX/lh1tMbcUL20dp6T+l1bLHO5hE5n3Ix
MXvljRA34030Vvj2jhyauvRB8GHTflPkhwaPJ7Oz0AG9m2wo7JpHBWYzMcZZ
GadcXIjfmFBQ+PDOiJzGb0RemgQ+L3M8Ovfr8IzfmLV9VNqU+KV2jbxhPEsE
Nyt9nZpv8NGpa2zWyln0DvKvHZ72v505WitrymbHXif3dh4UOYT/huzB9ujN
9ltOtrgfBP5qYDZJ5ccHf07a1M7FqYuWvM2eOCvyKj8EWd3bAT4xMrB1Oz1v
4venLSeY97Fp5/uB7Yv3iJ2XnWTzzHHnvNfw++bdZxf25uLDxkDmx8/h2Rl+
k7lbD/nJGT+5gCxCNvhs3i+2Z/rLCtFhxKBdlTGLDxJHReZZPjT8reh8u5vi
xK7M3Mn76v40awJP9hWHKB7xwsiqYPKq/Lrg+Sj4SPhU+Cn4b/gw2ODZ4tn0
2d35S9j0JT6t1Yf2W/GNXTR0HfBsfjtpn9wvhsa9ODTGeHXmSEZGg6fxiWnz
wqHlJWMzXnIv+ym7oXGKdbhg6LHygfETyZcMfu7ohPRBMRXiV/iVxEeoy1/D
NwTPr8Rv4Pd73llzfE7GcGP6vSR6FTmebmUcythX/Q6W/kx3Zie0X2yz9Gl4
tmLyPPn/Ddl/8WfeRL615bOnaF8ZevGeN6bfeYPXD//MAllP67R0xgnPf2Mt
xdaJsSMzy28L/I7Ab09SRq9kExU/x6Zq7LfkvK0e2JzoKWyjaMXZoaez+E0D
+z794n2B2V7FwvkfCdixWDi/72RX8T9XwDsO/b8UrPvPsv7oxc75Deb9oZH7
JoORkx4I3l7dE3q/IUUndss5eknWR9zfnRnb7Rn/TeGfdE565jWB8VKxnNcE
XjZnnu+Jb3nZwHPq0E/dB3jyAz8b//cc3zeYPD/7txrTtkvza/GZ8XXx0YN/
lbd3zF0W73lF7rIYUXIsu9Yrcl/c7xVytp0Zfjz+PP3PaZdcwaf/8rRvLC/L
eMSwiGXhfxQH5ZzzgYrFEitGfhP3Qv/xW3WxRvTDrSI3ksXpifTG2WUzrTui
gRM3Qt+b/Y+zpv3NL7p1YPEe3wgNeJ+0o304ZfRW9cX7uqc7TluPEl8h3z4w
nXLb9LV9aOhZYnZ2yvi/HNgcD0ybfr+/TeqC1dMHXc88tsx48MD5w6/Iy1tk
jvRxNiZ+2t0CszXtPu1v8K6B8Xl6KDvyMUPj0NFDvxLZ2F5Y710y5rlD/4KU
4xd4xT7Tbks7ewXeNO0rowv7Fv+3feRVsP87Id8v8C8Co5XvHzwbAts33++B
gdmW6VsHBj4gMJnnwpwTazzJvvCZW9ftsrbeaDYy+rEYcPyTTUOcwhLh1Xjb
vOF75Gn/3+GsnO0Fc27ZhNmO+fTdo4Vytt179x9PcVfQLBF+wh+Mt7C1gjcN
L9U++URdcZ/4hlhKMD5Df5wvfc0bvms85KS586a4f2CyyjMyfjR0AfzZ+otD
nifvwmVZh1lpX4zCnPG+MH2JUxCTwU7Ox7hIxsn3unD6YiewJjtGZlg4fICd
+fmZLz7q2xVke35e8OQAvOWErMMiWXN+GOtJzvHWPze8TozHi/I+io2CJzfC
LR68NxRs7Gzvi2U96fN4NP7MXr5o8PeFboHskTEb7/8Bajt3ww==
           "]], 
          PolygonBox[CompressedData["
1:eJwlkckuRFEURe997isiIhLEuGqgiUiFUvroYyxmhoyM+Bcf40P0M82Akuii
VyjWtgc776xzzjvdLW7urG1nIYR+lFDIQ9jgU8G5hD2OWjP7MuwxVIDX4QY/
DMOPMYQSfAGPwg14BX6Bq3BG/ipch+fhIbiFnGd4BH7DLhOvwb+oM7qHen3B
HdE1VKsJdUfPpNk+kmuX4QX4Kbm3eqjXK9wWPZNmK6Madhc5J8RO0XuwT7E+
tBv/zxD2iB2i12CfYpeaMXhn7X4Dp+gdtMtD8m51VIG/k281zDyLuX2KTeO7
J3abbA8SnyN2lnzLXngGnkKlzDMcJ9dQLd3kJ3ln7a4dP+FluJr5Rjn2JCrC
PfBB8pvqbXXjmLunemuHO+Kz8EDmHa/h5tz/tuObwN7Htx1cU7WPkm+pGTWr
cpS7ha+Qewftohufk3uV/NbqoV4pd65m1ux/mMVDww==
           "]]}]}}, {{
        RGBColor[
         NCache[
          Rational[14, 15], 0.9333333333333333], 
         NCache[
          Rational[2, 5], 0.4], 
         NCache[
          Rational[7, 15], 0.4666666666666667]], 
        LineBox[CompressedData["
1:eJwl1FdrFWEUheEx9q54YQ+KIKII9hpLYjf2GHvX2E2sib333kuixhaNvSsq
IogggogFRBBB/AWKgrc+Gy/eWXvtWXvmzDfznaYz8kbllkmSJMOhTtkkifpB
uSSZm5IkD2lPjd50ITKQi3QsQl8sxmxz7elMus78KfUBc3X5Wnx9eoIv1N/A
96dL0Q9LMADL4h5yHeg8ulmuSF1orhGfyqfSYv60/lZ+EF2BgViOwciPa8t1
pHl0h9wZ9QVzTflWfDN6lT+rv4sfQlciEwUYilXRk+sU96B75YrVN8w15zvz
Leh9/pz+fn44XYNhWI0RWIv1kY9z9JDcefUjc634DL41fcpf0D/Cj4oZjMQ6
ZMW6xTPLdaGb6HG5i+rn5trwQ/h29AV/Sf8knx1ZjMZGjMFm7JbrSnfQIrkS
9UtzHflsvjN9xV/WP8OPi3tjLLZgPLbhoFw3uo+ek7uifm2uGz+ZT6Nv+NJY
f35i3BMTsB2TsBPH5brHs9MSuavqt+Z68bP4dPqOv6Z/hZ8Sz4DJ8f4wFXtw
Wi6NnqLX5K6rP5jry8+P745+4m/Ee+Snx2/HNOzFjHiP8VvletBielvupvqz
uUF8Hp9Jv/C39O/ys2It4vuP7x45OIRSuZ60hD6Qu63+am4Yv4wfQb/xd+J7
4OfEGsR+wuHYgziKW3K96HX6RO6u+ru5LD4/3jP9wd/Tf8bPjzWNfYRj6BN7
IdZLrm2sP21Hx9Ha9vl9dZr5BfRErIf+bP2TsQdc7686B4tlumOVXgFWYCmy
nMulH+XrOT9PPROTMBq19VLL69NMfhFNp53QEinxjvDMfGP+J/6gJn7jF2qg
oWvkyDVBdb4aqqIKGus9Nl9ZXQkVUQEN9B/pG01I4tGSN3FPvHdYTd/RHnJz
Uv7/B/4D+ASS6A==
         "]]}, 
       TagBox[
        TooltipBox[{
          Directive[{
            Opacity[0.4], 
            GrayLevel[0]}], 
          LineBox[CompressedData["
1:eJwNyUtKAmAYhtHf0iIIIsJs6qihZDcNKcvmQUtwAbo7F6AQEdHFTJtpDbqA
FWiCWmpn8HC+ly9ZLJ+XIiGEM1WiIWzGQmiwqqYO7EcuscUUn1hTRzm7zWU+
c4svvNCbDu1XrvCdaX7wUp86srtc5Re3+c0r9ZW3e1zjD3c44LVGOraHjHPM
Xf7yRhOd2H9c55R7nPFWEXdBQQnNaV/zuvOP8VRRbWhBGS3q3v9BWXed/0YU
LYI=
           "]]}, 
         RowBox[{"-", "500.`"}]], Annotation[#, -500., "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[{
            Opacity[0.4], 
            GrayLevel[0]}], 
          
          LineBox[{1207, 1320, 1241, 1220, 1243, 1339, 1242, 1290, 1244, 1328,
            1245, 1221, 1252, 1341, 1251, 1293, 1223, 1253, 1321, 1210, 1294, 
           1212, 1322, 1258, 1225, 1259, 1323, 1213, 1296, 1214, 1324, 1264, 
           1227, 1265, 1325, 1215, 1298, 1216, 1326, 1270, 1229, 1318, 1271, 
           1315, 1316, 1317, 1300, 1311, 1310}]}, 
         RowBox[{"-", "1000.`"}]], Annotation[#, -1000., "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[{
            Opacity[0.4], 
            GrayLevel[0]}], 
          
          LineBox[{1211, 1308, 1209, 1288, 1246, 1306, 1305, 1217, 1312, 1313,
            1309, 1314, 1208, 1291, 1307}]}, 
         RowBox[{"-", "1500.`"}]], 
        Annotation[#, -1500., "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, FrameTicks -> {{All, All}, {All, All}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, 
        FormBox[
         StyleBox["v", 
          GrayLevel[0], 15, 
          Thickness[
           Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
         TraditionalForm]}, {
        FormBox[
         StyleBox[
          TagBox["m", HoldForm], 
          GrayLevel[0], 15, 
          Thickness[
           Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
         TraditionalForm], None}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[
       Rational[1, 2], 0.5], AxesLabel -> {None, None}, AxesStyle -> Directive[
       GrayLevel[0], 21, 
       Thickness[
        NCache[
         Rational[1, 500], 0.002]], FontFamily -> Automatic], DisplayFunction :> 
     Identity, Epilog -> InsetBox[
       FormBox[
        StyleBox[
         RowBox[{
           StyleBox["\[CapitalLambda]", Italic, StripOnInput -> False], 
           "\[LongEqual]", 
           RowBox[{"-", "6.90775528550148`"}]}], 
         GrayLevel[0], 15, 
         Thickness[
          Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
        TraditionalForm], 
       Scaled[{0.1, 0.9}], {-1, 0}], Frame -> {{False, True}, {True, False}}, 
     FrameLabel -> {{None, 
        FormBox[
         StyleBox["v", 
          GrayLevel[0], 15, 
          Thickness[
           Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
         TraditionalForm]}, {
        FormBox[
         StyleBox[
          TagBox["m", HoldForm], 
          GrayLevel[0], 15, 
          Thickness[
           Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
         TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 21, 
       Thickness[
        Rational[1, 500]], FontFamily -> Automatic], 
     FrameTicks -> {{All, All}, {All, All}}, 
     Method -> {"GridLinesInFront" -> True}, PlotLabel -> FormBox[
       StyleBox["\"changepoint function participant i\"", 
        GrayLevel[0], 15, 
        Thickness[
         Rational[1, 50]], FontFamily -> Automatic, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 201}, {-1, 201}}, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[
             SparseArray[
              Automatic, {4, 1}, 0., {
               1, {{0, 0, 1, 2, 3}, {{1}, {1}, {1}}}, {0.23565545518937447`, 
                0.5415307548407677, 0.8474060544921611}}], {{
                Rational[-15, 2], -50}, {
                Rational[15, 2], 50}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -50}, {
                  Rational[-15, 2], -50}, {
                  Rational[-15, 2], 50}, {
                  Rational[15, 2], 50}, {
                  Rational[15, 2], -50}}, {{
                 7.5, -50}, {-7.5, -50}, {-7.5, 50}, {7.5, 50}, {
                 7.5, -50}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{-7.500000000000001, -50.}, {-7.500000000000001, 
                50.}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{-7.500000000000001, -25.}, 
                    
                    Offset[{-4., 
                    0}, {-7.500000000000001, -25.}]}, {{-7.500000000000001, 
                    0.}, 
                    
                    Offset[{-4., 0}, {-7.500000000000001, 
                    0.}]}, {{-7.500000000000001, 25.}, 
                    Offset[{-4., 0}, {-7.500000000000001, 25.}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1500"}], TraditionalForm], 
                    Offset[{-7., 0.}, {-7.500000000000001, -25.}], {1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1000"}], TraditionalForm], 
                    Offset[{-7., 0.}, {-7.500000000000001, 0.}], {1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "500"}], TraditionalForm], 
                    Offset[{-7., 0.}, {-7.500000000000001, 25.}], {1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 100}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"GrayLevel", "[", "#1", "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1635.2149151270985`"}], ",", 
                   RowBox[{"-", "0.5618373210416423`"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"-", "1500.`"}], ",", 
               RowBox[{"-", "1000.`"}], ",", 
               RowBox[{"-", "500.`"}], ",", "0.`", ",", "500.`", ",", 
               "1000.`", ",", "1500.`"}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Left"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 2}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7407186463212337`*^9, 3.740718678847291*^9, {3.740718723276169*^9, 
   3.740718744086605*^9}},ExpressionUUID->"60dc4edf-a139-4e46-864a-\
81ee358c2ba5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"logistic", "[", 
    RowBox[{"-", "1500"}], "]"}], "-", 
   RowBox[{"logistic", "[", 
    RowBox[{"-", "500"}], "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.740718768547448*^9, 
  3.7407187834454746`*^9}},ExpressionUUID->"33d7d473-494e-4c39-bd49-\
ea469785107a"],

Cell[BoxData[
 RowBox[{"-", "7.124576406741285`*^-218"}]], "Output",
 CellChangeTimes->{{3.7407187802942686`*^9, 
  3.7407187839290752`*^9}},ExpressionUUID->"cd124546-00ba-4859-b52d-\
0e619e5f42b1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"n", "=", "L"}]], "Input",
 CellChangeTimes->{{3.7407193498140697`*^9, 
  3.7407193555080795`*^9}},ExpressionUUID->"e8505ca2-cab8-4c31-918b-\
ff23596d43c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"obs", "[", 
      RowBox[{"[", "6", "]"}], "]"}], "]"}], "-", "1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "n", "}"}], ",", 
     RowBox[{"{", "40", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cumf", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"obs", "[", 
         RowBox[{"[", 
          RowBox[{"6", ",", 
           RowBox[{"i", "+", "1"}]}], "]"}], "]"}]}], "]"}], "]"}], "=", 
     "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cumf", "=", 
   RowBox[{"Accumulate", "[", "cumf", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.740719136240094*^9, 3.7407191367860947`*^9}, {
  3.7407193377396483`*^9, 3.74071937815932*^9}, {3.7407194387654257`*^9, 
  3.7407194799806986`*^9}},ExpressionUUID->"1e9bcfb9-d955-40b1-a224-\
d0aab64ff834"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cumf", "//", "MF"}]], "Input",
 CellChangeTimes->{{3.7407193860373335`*^9, 3.7407193867705345`*^9}, {
  3.740719485924309*^9, 
  3.74071948668871*^9}},ExpressionUUID->"89d6c928-0fba-44b5-b1ee-\
d3b7fd7c21e4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "0", "0", "1", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "0", 
      "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "0", 
      "1", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "0", 
      "1", "1", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "0", 
      "1", "1", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "1", 
      "1", "1", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "1", "0", "1", "1", 
      "1", "1", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "2", "0", "1", "1", 
      "1", "1", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "0", "1", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "0", "2", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "1", "2", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "1", "2", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "2", "2", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "0", "0", "2", "3", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "1", "0", "2", "3", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "1", "0", "1", "0", "1", "0", "2", "0", "2", "1", 
      "1", "1", "1", "0", "2", "3", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "1", "0", "2", "3", "0", "1", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "1", "0", "2", "3", "0", "2", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "1", "0", "2", "3", "0", "2", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "1", "0", "2", "4", "0", "2", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "2", "0", "2", "4", "0", "2", "0", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "0", "3", "1", 
      "1", "1", "2", "0", "2", "4", "0", "2", "1", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "3", "1", 
      "1", "1", "2", "0", "2", "4", "0", "2", "1", "0", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "3", "1", 
      "1", "1", "2", "0", "2", "4", "0", "2", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "3", "1", 
      "1", "1", "2", "0", "2", "4", "0", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "4", "1", 
      "1", "1", "2", "0", "2", "4", "0", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "4", "2", 
      "1", "1", "2", "0", "2", "4", "0", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "1", "4", "2", 
      "1", "1", "2", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "2", "4", "2", 
      "1", "1", "2", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "2", "4", "2", 
      "1", "1", "3", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "1", "0", "1", "0", "2", "2", "4", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "2", "0", "1", "0", "2", "2", "4", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "2", "0", "1", "0", "2", "2", "5", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "0", "2", "2", "5", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "0", "2", "2", "5", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "5", "2", 
      "1", "1", "4", "0", "2", "4", "1", "3", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "5", "2", 
      "1", "1", "4", "0", "2", "4", "1", "4", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "6", "2", 
      "1", "1", "4", "0", "2", "4", "1", "4", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "6", "3", 
      "1", "1", "4", "0", "2", "4", "1", "4", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "7", "3", 
      "1", "1", "4", "0", "2", "4", "1", "4", "1", "1", "0", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "7", "3", 
      "1", "1", "4", "0", "2", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "7", "3", 
      "1", "1", "4", "0", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "1", "1", "2", "2", "7", "3", 
      "1", "1", "4", "0", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "1", "1", "4", "0", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "1", "1", "4", "1", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "2", "1", "4", "1", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "2", "1", "4", "1", "3", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "2", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "0", "3", "0", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "3", "0", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "0", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "0", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "0", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "1", "4", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "2", "4", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "3", "4", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "4", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "2", "0", "1", "1", "5", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "5", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "1", "2", "2", "7", "3", 
      "3", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "1", "2", "2", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "1", "2", "3", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "1", "3", "3", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "3", "3", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "5", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "3", "3", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "6", "1", "1", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "3", "3", "7", "3", 
      "4", "1", "4", "1", "4", "4", "3", "6", "1", "2", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "3", "3", "7", "3", 
      "4", "2", "4", "1", "4", "4", "3", "6", "1", "2", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "4", "1", "4", "4", "3", "6", "1", "2", "1", "0", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "4", "1", "4", "4", "3", "6", "1", "2", "1", "1", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "4", "1", "5", "4", "3", "6", "1", "2", "1", "1", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "5", "1", "5", "4", "3", "6", "1", "2", "1", "1", "0", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "5", "1", "5", "4", "3", "6", "1", "2", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "5", "1", "5", "4", "3", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "6", "1", "5", "4", "3", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "6", "1", "5", "4", "4", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "6", "1", "5", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "6", "1", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "3", 
      "4", "2", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "4", 
      "4", "2", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "0", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "2", "4", "3", "7", "4", 
      "4", "2", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "7", "4", 
      "4", "2", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "7", "4", 
      "4", "3", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "7", "5", 
      "4", "3", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "8", "5", 
      "4", "3", "6", "2", "6", "4", "5", "6", "1", "3", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "8", "5", 
      "4", "3", "6", "2", "6", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "8", "5", 
      "4", "3", "7", "2", "6", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "8", "5", 
      "4", "3", "8", "2", "6", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "3", "4", "3", "8", "5", 
      "4", "3", "8", "2", "7", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "1", "2", "4", "4", "3", "8", "5", 
      "4", "3", "8", "2", "7", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "4", "3", "8", "2", "7", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "4", "4", "8", "2", "7", "4", "5", "6", "1", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "4", "4", "8", "2", "7", "4", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "1", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "4", "4", "8", "2", "7", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "4", "4", "8", "2", "7", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "4", "8", "2", "7", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "1", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "4", "8", "2", "7", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "4", "9", "2", "7", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "4", "9", "2", "8", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "4", "9", "2", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "5", "9", "2", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "5", "9", "3", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "5", "10", "3", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "5", "10", "4", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "6", "10", "4", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "6", "10", "5", "9", "5", "5", "6", "2", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "6", "10", "5", "9", "5", "5", "6", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "7", "10", "5", "9", "5", "5", "6", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "7", "10", "5", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "5", "7", "11", "5", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "7", "11", "5", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "7", "12", "5", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "7", "13", "5", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "7", "13", "6", "9", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "7", "13", "6", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "6", "8", "13", "6", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "5", 
      "7", "8", "13", "6", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "6", 
      "7", "8", "13", "6", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "6", 
      "7", "8", "13", "7", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "6", 
      "7", "9", "13", "7", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "6", 
      "7", "9", "13", "8", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "4", "3", "8", "6", 
      "7", "9", "13", "9", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "3", "8", "6", 
      "7", "9", "13", "9", "10", "5", "5", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "3", "8", "6", 
      "7", "9", "13", "9", "10", "5", "6", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "3", "8", "6", 
      "8", "9", "13", "9", "10", "5", "6", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "3", "8", "6", 
      "8", "9", "13", "9", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1", 
      "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "3", "8", "6", 
      "8", "9", "13", "10", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "13", "10", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "14", "10", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "15", "10", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "15", "11", "10", "5", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "15", "11", "10", "6", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "9", "15", "12", "10", "6", "7", "7", "3", "4", "1", "1", "1", "1",
       "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "10", "15", "12", "10", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "11", "15", "12", "10", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "11", "16", "12", "10", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "11", "16", "12", "11", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "12", "16", "12", "11", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "13", "16", "12", "11", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "13", "16", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "13", "17", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "13", "18", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "14", "18", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "15", "18", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "6", 
      "8", "15", "19", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "8", "15", "19", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "8", "15", "20", "12", "12", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "8", "15", "20", "12", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "8", "15", "20", "13", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "8", "16", "20", "13", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "9", "16", "20", "13", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "8", "7", 
      "9", "16", "20", "14", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "9", "16", "20", "14", "13", "6", "7", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "9", "16", "20", "14", "13", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "9", "17", "20", "14", "13", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "9", "17", "21", "14", "13", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "10", "17", "21", "14", "13", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "21", "14", "13", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "21", "14", "14", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "21", "15", "14", "6", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "21", "15", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "22", "15", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "23", "15", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "17", "23", "16", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "7", 
      "11", "18", "23", "16", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "11", "18", "23", "16", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "11", "18", "23", "17", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "11", "18", "23", "18", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "11", "18", "24", "18", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "11", "19", "24", "18", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "12", "19", "24", "18", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "12", "19", "24", "19", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "24", "19", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "25", "19", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "26", "19", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "26", "20", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "27", "20", "14", "7", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "27", "20", "14", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "27", "20", "15", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "19", "27", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "13", "20", "27", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "14", "20", "27", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "14", "20", "28", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "14", "21", "28", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "14", "21", "29", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "15", "21", "29", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "15", "22", "29", "20", "16", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "15", "22", "29", "20", "17", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "8", 
      "15", "23", "29", "20", "17", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "23", "29", "20", "17", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "23", "29", "20", "18", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "24", "29", "20", "18", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "24", "29", "20", "19", "8", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "24", "29", "20", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "24", "29", "21", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "24", "29", "22", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "25", "29", "22", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "25", "29", "23", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "2", "2", "0", "1", "1", "6", "2", "2", "4", "5", "4", "9", "9", 
      "15", "25", "30", "23", "19", "9", "8", "7", "3", "4", "1", "1", "1", 
      "1", "1", "1", "1", "2", "0", "0", "0", "1", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7407193872385354`*^9, {3.740719482648303*^9, 
   3.7407194872971115`*^9}},ExpressionUUID->"cb9f7689-d9aa-4aa8-a74f-\
0e3ee94d040c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"obs", "[", 
   RowBox[{"[", "6", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740719396021351*^9, 
  3.7407194326970153`*^9}},ExpressionUUID->"b4fcb000-f033-48e2-a9fe-\
a203efd20f77"],

Cell[BoxData["201"], "Output",
 CellChangeTimes->{{3.740719398330155*^9, 
  3.7407194331026163`*^9}},ExpressionUUID->"8818f3c8-a917-4dfc-8a83-\
a0d9f4918c02"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"plot", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "200"}], "]"}], ",", 
            RowBox[{"obs", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", 
               RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"mean", "@", 
             RowBox[{"pdists", "[", "i", "]"}]}]}], "}"}], "]"}], ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", 
            RowBox[{"mean", "@", 
             RowBox[{"rdists", "[", "i", "]"}]}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"Joined", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{"{", 
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", "0.01"}], "]"}], "}"}], 
             "]"}], ",", "0.02"}], "}"}], ",", "\"\<\>\"", ",", "\"\<\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "40"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"grey", ",", "Thin"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"red", ",", "Thick", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"purpleblue", ",", "Thick", ",", "Dashed", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"myframestyle", "[", "15", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"myaxes", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<observation\>\"", ",", "\"\<mean\>\""}], "}"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"mystyle", "[", 
         RowBox[{"\"\<participant \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"mylegends", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<outcome\>\"", ",", "face", ",", "robot2"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a4shortside", ",", 
          RowBox[{"a4shortside", "/", "2"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"expdf0", "[", 
     RowBox[{
      RowBox[{"\"\<means_p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
      "plot"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"3de5c412-53d8-4c8e-b6bd-1933551cdad6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expdf0", "[", "\"\<testrl\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.740670360043458*^9, 3.740670361332532*^9}, {
  3.7406707318257227`*^9, 3.7406707429553595`*^9}, {3.7406709658551083`*^9, 
  3.7406709755266614`*^9}},ExpressionUUID->"1abdb478-b28a-44f9-b147-\
d233e96e53a9"],

Cell[BoxData["\<\"testrl.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.7406703618025584`*^9, {3.7406706494010077`*^9, 3.740670677115593*^9}, {
   3.740670713892697*^9, 3.740670743367383*^9}, 3.740670913905137*^9, 
   3.740670976509718*^9, {3.7406710294817476`*^9, 
   3.7406711299744954`*^9}},ExpressionUUID->"45de4f8a-9410-4aec-9027-\
aa9db1caf498"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"jst", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"jsd", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"rdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"kmt", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"km", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"rdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"plot", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", "kmt"}], "}"}], "]"}], 
         ",", 
         RowBox[{"T", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "200"}], "]"}], ",", "jst"}], "}"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"minstd", ",", "maxstd"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"green", ",", "Thick", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"yellow", ",", "Thick", ",", "Dashed", ",", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "None"}], ",", 
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
       ",", 
       RowBox[{"Evaluate", "@", 
        RowBox[{"myframestyle", "[", "15", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"myaxes", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<observation\>\"", ",", "\"\<std\>\""}], "}"}], "]"}]}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"mystyle", "[", 
         RowBox[{"\"\<participant \>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"mylegends", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"face", ",", "robot2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"a4shortside", ",", 
          RowBox[{"a4shortside", "/", "2"}]}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"expdf0", "[", 
     RowBox[{
      RowBox[{"\"\<std_p\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_km\>\""}], ",", 
      "plot"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.740666059796822*^9, 
  3.740666141088565*^9}},ExpressionUUID->"43e9132e-981d-4aa2-9459-\
60d1a6f7d853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jsds", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mean", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"jsd", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"rdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7405756293206234`*^9, 3.740575751641438*^9}, {
  3.7405778417741117`*^9, 
  3.740577842226512*^9}},ExpressionUUID->"04c6f04f-d180-40a2-bb64-\
150fe34bda17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09937720850746389`", ",", "0.0036406890945786625`", ",", 
   "0.1489282640673462`", ",", "0.05690793879240351`", ",", 
   "0.2613842625636484`", ",", "0.03908313394189656`", ",", 
   "0.2519547750383629`", ",", "0.09055754096767421`", ",", 
   "0.04166223413284238`", ",", "0.1343809119723427`", ",", 
   "0.038970748496184024`", ",", "0.04931969583431085`", ",", 
   "0.09216838982768535`", ",", "0.006836053309199227`", ",", 
   "0.2707141149731339`", ",", "0.00534013301083758`", ",", 
   "0.0037169430499600017`", ",", "0.0682765820501542`", ",", 
   "0.08524788116493115`", ",", "0.05876862430719554`", ",", 
   "0.07827025112978182`", ",", "0.06501081161525099`", ",", 
   "0.04454175853342132`", ",", "0.048147994538364366`", ",", 
   "0.013928577641795944`", ",", "0.06305361459187792`", ",", 
   "0.07187529483096046`", ",", "0.05577450963738318`", ",", 
   "0.07326684244745013`", ",", "0.10510030845821985`", ",", 
   "0.07444259915368112`", ",", "0.29421574947160056`", ",", 
   "0.05752907851629948`", ",", "0.12150539507836466`", ",", 
   "0.16120424371693282`", ",", "0.07198902265744771`", ",", 
   "0.14124301490398788`", ",", "0.1215205942594564`", ",", 
   "0.23027920394667284`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740575790454306*^9, 3.7405766681846495`*^9, 3.7405774366549997`*^9, {
   3.7405778503073263`*^9, 3.740577878106575*^9}, 3.740594557305501*^9, 
   3.7405951004424562`*^9},ExpressionUUID->"f68a6dfe-5271-4ee7-8751-\
e06a9d77ccd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Mean", ",", "Std", ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"1", "/", "4"}]}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"3", "/", "4"}]}], "]"}], "&"}], ",", "Max"}], "}"}], "[", 
   "jsds", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740575814635349*^9, 3.740575820001758*^9}, {
  3.7405758585026255`*^9, 3.7405758758654566`*^9}, {3.740575905879909*^9, 
  3.7405759066443105`*^9}, {3.7405950468689623`*^9, 
  3.740595048959366*^9}},ExpressionUUID->"396137f7-3abf-48bf-89ef-\
10f69f3f2c19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09487525615977184`", ",", "0.07500306866846407`", ",", 
   "0.048147994538364366`", ",", "0.1215205942594564`", ",", 
   "0.29421574947160056`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7405758173185534`*^9, 3.740575876910658*^9, 3.740575907159111*^9, 
   3.74057666843425*^9, {3.74057785263173*^9, 3.7405778782157755`*^9}, 
   3.7405945576019015`*^9, 3.740595050769969*^9, 
   3.7405951005672565`*^9},ExpressionUUID->"7b52e5bc-4046-4931-956f-\
009731d54c9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kms", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"km", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pdists", "[", "i", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"rdists", "[", "i", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "201"}], "}"}]}], "]"}], "^", "2"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7405758042759304`*^9, 3.7405758078483367`*^9}, {
  3.7405763201118374`*^9, 3.740576324245845*^9}, {3.740578607234661*^9, 
  3.7405786076246614`*^9}},ExpressionUUID->"e060e49b-a060-496a-b1e0-\
3245c774986b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.6127580404031088`", ",", "0.08943189232196679`", ",", 
   "9.639382247396657`", ",", "1.3652880159466807`", ",", 
   "5.851080578841552`", ",", "3.399376781907896`", ",", 
   "12.277236434421662`", ",", "2.1212398715719014`", ",", 
   "2.3343451905959607`", ",", "1.9976744126901902`", ",", 
   "1.9210479267038423`", ",", "1.880259286347546`", ",", 
   "5.083894466601114`", ",", "0.5823627839213306`", ",", 
   "7.407927908027084`", ",", "0.46411028595764037`", ",", 
   "0.34331244612009554`", ",", "2.3432164237327373`", ",", 
   "7.6547437483015655`", ",", "1.1845040007310204`", ",", 
   "2.6568430962251224`", ",", "1.5486487979112955`", ",", 
   "0.9206666683160362`", ",", "0.5830139989952168`", ",", 
   "0.7307768565751833`", ",", "1.914721508663724`", ",", 
   "3.6371830994250223`", ",", "0.6839999146263525`", ",", 
   "8.823146008262794`", ",", "10.694133914508056`", ",", 
   "2.910424854415494`", ",", "18.97694347178748`", ",", 
   "0.6984800340046109`", ",", "2.7506690362968516`", ",", 
   "2.410513430830162`", ",", "1.4301985239664219`", ",", 
   "2.667456338731084`", ",", "3.1127530730161177`", ",", 
   "4.880300607466136`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740575810454541*^9, 3.74057632708505*^9, 3.7405765268766007`*^9, 
   3.7405766697134523`*^9, {3.740578602336252*^9, 3.7405786104950666`*^9}, 
   3.7405945587407036`*^9, 
   3.7405951017372584`*^9},ExpressionUUID->"2fecc906-47b2-4b1c-99c1-\
b9cd7d5be4bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Mean", ",", "Std", ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"1", "/", "4"}]}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"3", "/", "4"}]}], "]"}], "&"}], ",", "Max"}], "}"}], "[", 
   "kms", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7405758860990744`*^9, 3.7405759102479167`*^9}, {
  3.7405949103119216`*^9, 3.7405949228075438`*^9}, {3.7405950181181116`*^9, 
  3.740595029552932*^9}},ExpressionUUID->"84fd848d-4298-46d2-b404-\
4dd7c84121bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.656001691706787`", ",", "3.8920733018564664`", ",", 
   "1.1845040007310204`", ",", "4.880300607466136`", ",", 
   "18.97694347178748`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7405758876278768`*^9, 3.740575910731518*^9}, 
   3.7405763283954525`*^9, 3.7405765277190027`*^9, 3.740576669916252*^9, 
   3.7405786184822807`*^9, 3.740594558865504*^9, 3.7405950310817347`*^9, 
   3.740595101893259*^9},ExpressionUUID->"72a6b496-294e-4ce8-bb1c-\
a5369fd00f86"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.740576285182376*^9, 
  3.740576285775177*^9}},ExpressionUUID->"c3a61733-399d-4cf3-bc21-\
4f90cd3ab7d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "wd", "=", 
   "\"\<C:\\\\Users\\\\pglpm\\\\repositories\\\\plinkinetti\\\\comparisons7c\\\
\\\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"label", "=", "\"\<mean1jsd\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parts", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "15"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"17", ",", "40"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73796694189331*^9, 3.737966988376969*^9}, {
  3.73978249776178*^9, 3.739782508385398*^9}, {3.7405491721783557`*^9, 
  3.740549173036357*^9}, {3.740574492120118*^9, 3.7405745042735395`*^9}, {
  3.740574570403056*^9, 3.7405746390743766`*^9}, {3.7405763018598056`*^9, 
  3.7405763058378124`*^9}, {3.7405768194319153`*^9, 
  3.7405768220059195`*^9}},ExpressionUUID->"78dddf86-f9bd-48c6-9602-\
873c15bdb2b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pdists", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"wd", "<>", "\"\<pdistr\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", "label",
         "<>", "\"\<.csv\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rdists", "[", "i", "]"}], "=", 
      RowBox[{"Import", "[", 
       RowBox[{"wd", "<>", "\"\<rdistr\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<_\>\"", "<>", "label",
         "<>", "\"\<.csv\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "parts"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.740574645953989*^9, 
  3.7405747465429654`*^9}},ExpressionUUID->"bccedfa3-2ca4-4af0-9e5f-\
e02d64a3b80e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jsds", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mean", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"jsd", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"rdists", "[", "i", "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "201"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7405756293206234`*^9, 3.740575751641438*^9}, {
  3.7405945786931386`*^9, 
  3.7405945790207396`*^9}},ExpressionUUID->"f8393e9e-23f0-490f-96cf-\
9cda94535a91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0765795938062426`", ",", "0.0035537798623898656`", ",", 
   "0.1355149166707464`", ",", "0.055216173382916914`", ",", 
   "0.14368997875920764`", ",", "0.03451298802509591`", ",", 
   "0.18341162097332323`", ",", "0.018398816435841882`", ",", 
   "0.039244122067830914`", ",", "0.10566278163898785`", ",", 
   "0.030854487438974076`", ",", "0.04515508362975293`", ",", 
   "0.09044216144704895`", ",", "0.005330010157937457`", ",", 
   "0.17388925849783404`", ",", "0.004786228693266741`", ",", 
   "0.003640205229338446`", ",", "0.054603811453391264`", ",", 
   "0.06246962514079212`", ",", "0.06403978396522295`", ",", 
   "0.0788822502768752`", ",", "0.06480987712736924`", ",", 
   "0.033775133836270746`", ",", "0.04796453486032472`", ",", 
   "0.008499540147296224`", ",", "0.06247373429422428`", ",", 
   "0.059691915935282794`", ",", "0.05207338050608263`", ",", 
   "0.03990046838449341`", ",", "0.10093047274887035`", ",", 
   "0.07346052769038963`", ",", "0.0732724599270676`", ",", 
   "0.05738066154229591`", ",", "0.09970685034503651`", ",", 
   "0.13495116819259725`", ",", "0.07191406194480368`", ",", 
   "0.1323793905055357`", ",", "0.12100506362270068`", ",", 
   "0.20798538390305155`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740575790454306*^9, 3.740576851177971*^9, {3.7405945984739733`*^9, 
   3.7405946161186047`*^9}, 
   3.740595128241705*^9},ExpressionUUID->"aa50dd27-7ab4-47d4-a201-\
f3ee9d3d3dba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Mean", ",", "Std", ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"1", "/", "4"}]}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"3", "/", "4"}]}], "]"}], "&"}], ",", "Max"}], "}"}], "[", 
   "jsds", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740575814635349*^9, 3.740575820001758*^9}, {
  3.7405758585026255`*^9, 3.7405758758654566`*^9}, {3.740575905879909*^9, 
  3.7405759066443105`*^9}, {3.7405950600519853`*^9, 
  3.740595062407589*^9}},ExpressionUUID->"dafde40d-231c-4454-b52c-\
dea8a3f001ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.07312954623247976`", ",", "0.0502302660938547`", ",", 
   "0.039244122067830914`", ",", "0.10093047274887035`", ",", 
   "0.20798538390305155`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7405758173185534`*^9, 3.740575876910658*^9, 3.740575907159111*^9, 
   3.7405768513183713`*^9, {3.740594598598774*^9, 3.7405946162434044`*^9}, 
   3.740595128366505*^9},ExpressionUUID->"21d26591-b531-4368-b104-\
67de1f870800"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kms", "=", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"km", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pdists", "[", "i", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"rdists", "[", "i", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "201"}], "}"}]}], "]"}], "^", "2"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "parts"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7405758042759304`*^9, 3.7405758078483367`*^9}, {
  3.7405768343143415`*^9, 3.740576837434347*^9}, {3.7405945848239493`*^9, 
  3.740594589737958*^9}},ExpressionUUID->"48c04f4f-8e64-480c-a519-\
7f52db405035"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.064428292971843`", ",", "0.1265557725704441`", ",", 
   "14.271601116260898`", ",", "2.1316348937932896`", ",", 
   "11.779273944238376`", ",", "4.64877442546473`", ",", 
   "17.363061326353527`", ",", "4.839717936063878`", ",", 
   "3.0964163421159916`", ",", "4.721306211391051`", ",", 
   "2.8344560597791686`", ",", "1.7899910781417467`", ",", "5.3713089768842`",
    ",", "0.7055403909891924`", ",", "10.91212485119556`", ",", 
   "0.7477841026306878`", ",", "0.5893719057368892`", ",", 
   "5.515251718778485`", ",", "11.998186763239483`", ",", 
   "1.4478232943599838`", ",", "2.8791628229094286`", ",", 
   "1.585006926718068`", ",", "0.6974891503298144`", ",", 
   "1.6504987741361352`", ",", "1.6240866066556745`", ",", 
   "2.5581448366123984`", ",", "3.880642935407667`", ",", 
   "0.8698097358175381`", ",", "17.773918298865674`", ",", 
   "11.617593859385428`", ",", "3.6197539019756166`", ",", 
   "2.444710479454074`", ",", "0.7066564340960074`", ",", 
   "3.2671733920994197`", ",", "3.2832684839429516`", ",", 
   "1.4389337651848473`", ",", "3.0830671971108994`", ",", 
   "3.827691583606648`", ",", "11.633079478197761`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.740575810454541*^9, {3.7405768525351734`*^9, 3.7405768537051754`*^9}, 
   3.740594607351389*^9, 
   3.7405951295521073`*^9},ExpressionUUID->"0152eb4b-0a32-46b3-8406-\
09d6654b282d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Mean", ",", "Std", ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"1", "/", "4"}]}], "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Quantile", "[", 
       RowBox[{"#", ",", 
        RowBox[{"3", "/", "4"}]}], "]"}], "&"}], ",", "Max"}], "}"}], "[", 
   "kms", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7405758860990744`*^9, 3.7405759102479167`*^9}, {
  3.7405950647319937`*^9, 
  3.7405950682576*^9}},ExpressionUUID->"0ee00b99-c976-4a96-95c3-b496b67d7221"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.830648668345269`", ",", "4.72438589313732`", ",", "1.585006926718068`", 
   ",", "5.3713089768842`", ",", "17.773918298865674`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7405758876278768`*^9, 3.740575910731518*^9}, 
   3.7405768538455753`*^9, 3.740594607491789*^9, 
   3.7405951296925077`*^9},ExpressionUUID->"898f7250-56df-4d07-8437-\
56221751f9a9"]
}, Open  ]]
},
WindowSize->{640, 755},
WindowMargins->{{52, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (32-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 410, 7, 31, "Input",ExpressionUUID->"8c2e1140-ea8f-4ed0-b1c4-1dc3b46cfe9c"],
Cell[971, 29, 2214, 66, 129, "Input",ExpressionUUID->"0e3afbc2-4587-4087-b540-78cee21a4168"],
Cell[3188, 97, 1236, 37, 93, "Input",ExpressionUUID->"de86150c-a8a6-458c-b81f-56a030ed4f54"],
Cell[4427, 136, 788, 19, 75, "Input",ExpressionUUID->"d8e2b3bd-c1bd-44e9-8dfa-90c57ca2f7b2"],
Cell[5218, 157, 826, 21, 86, "Input",ExpressionUUID->"632154d6-104c-44e4-836c-e920403eeb5d"],
Cell[6047, 180, 1269, 30, 204, "Input",ExpressionUUID->"fdb2c162-6435-42f5-8002-a9ffe5d008bc"],
Cell[CellGroupData[{
Cell[7341, 214, 382, 9, 28, "Input",ExpressionUUID->"fe3ee484-00c7-47c9-bfca-f3cb33dbe532"],
Cell[7726, 225, 3809, 88, 356, "Output",ExpressionUUID->"2e55321c-40f0-4221-ac67-ae0a08cb4464"]
}, Open  ]],
Cell[11550, 316, 816, 25, 53, "Input",ExpressionUUID->"12d4e6c1-c581-44a0-910f-8276ec83e096"],
Cell[CellGroupData[{
Cell[12391, 345, 348, 7, 31, "Input",ExpressionUUID->"ad75423f-3c80-41a8-b1ea-19d7b043cf07"],
Cell[12742, 354, 203, 4, 32, "Output",ExpressionUUID->"a384b25a-c566-4a1f-85db-9620b244c2de"]
}, Open  ]],
Cell[12960, 361, 306, 6, 28, "Input",ExpressionUUID->"e8d48e6d-dd4b-496a-a3ca-2d14597be30e"],
Cell[13269, 369, 217, 5, 28, "Input",ExpressionUUID->"cadc8608-ee23-4020-bc3a-46b20f6d383d"],
Cell[13489, 376, 4376, 112, 371, "Input",ExpressionUUID->"a8b5e501-3e1e-4d04-b1ad-bba1224c9903"],
Cell[17868, 490, 1046, 32, 90, "Input",ExpressionUUID->"c3f9b29a-8c70-43d7-a1b6-ed76cf7412ac"],
Cell[18917, 524, 216, 5, 28, "Input",ExpressionUUID->"56003c81-d787-4605-b9d0-a190c83a5477"],
Cell[19136, 531, 3175, 81, 313, "Input",ExpressionUUID->"bef745b9-b362-4e45-b6ac-c2be37739125"],
Cell[22314, 614, 1081, 34, 53, "Input",ExpressionUUID->"ddd90339-39c0-4b05-836d-a3423b50b765"],
Cell[23398, 650, 665, 20, 53, "Input",ExpressionUUID->"9e4d1770-d738-429e-bac2-ff8e7f11ac0e"],
Cell[24066, 672, 229, 5, 28, "Input",ExpressionUUID->"33785c38-7aa1-434c-a1a0-34ca88597a70"],
Cell[24298, 679, 7735, 173, 827, "Input",ExpressionUUID->"19b9077a-9e02-4e4c-b775-88b0a55ff99e"],
Cell[32036, 854, 1487, 47, 86, "Input",ExpressionUUID->"b39b3b70-afbe-41f5-8d63-4e8e19e5b9e8"],
Cell[33526, 903, 810, 23, 75, "Input",ExpressionUUID->"43c9ab4c-e4f5-4c9b-89d2-806e200c2977"],
Cell[CellGroupData[{
Cell[34361, 930, 693, 20, 48, "Input",ExpressionUUID->"fcf559c9-b3aa-49ce-ac26-1efd5d9790eb"],
Cell[35057, 952, 137, 3, 32, "Output",ExpressionUUID->"4dcb39d8-c29c-4153-a774-c1917dbf3088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35231, 960, 431, 10, 28, "Input",ExpressionUUID->"831d6560-d71e-4e32-8ba7-8d0e3b7adbd2"],
Cell[35665, 972, 257, 4, 35, "Output",ExpressionUUID->"fe1f66be-8d23-49d4-ae8e-1f73368ee927"]
}, Open  ]],
Cell[35937, 979, 156, 3, 28, "Input",ExpressionUUID->"9bde8f3e-2c06-4909-9c17-d571a6fd854e"],
Cell[36096, 984, 244, 5, 28, "Input",ExpressionUUID->"f417e9da-ace0-4c13-9b07-a83f3e54054b"],
Cell[CellGroupData[{
Cell[36365, 993, 5881, 131, 425, "Input",ExpressionUUID->"0a121017-a9e9-44cb-a069-e06fadb52e44"],
Cell[42249, 1126, 211, 4, 32, "Output",ExpressionUUID->"8f587efd-42c1-4715-8dac-9c6ee8943d20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42497, 1135, 199, 4, 28, "Input",ExpressionUUID->"05777e1c-cc50-47a6-ab34-77c0180ea44c"],
Cell[42699, 1141, 193, 3, 32, "Output",ExpressionUUID->"7906f0d8-7139-4df8-918b-04cea80182f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42929, 1149, 4062, 103, 365, "Input",ExpressionUUID->"945abbad-4555-45df-a744-1aae34d67869"],
Cell[46994, 1254, 40887, 765, 347, "Output",ExpressionUUID->"60dc4edf-a139-4e46-864a-81ee358c2ba5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87918, 2024, 318, 9, 28, "Input",ExpressionUUID->"33d7d473-494e-4c39-bd49-ea469785107a"],
Cell[88239, 2035, 198, 4, 35, "Output",ExpressionUUID->"cd124546-00ba-4859-b52d-0e619e5f42b1"]
}, Open  ]],
Cell[88452, 2042, 179, 4, 28, "Input",ExpressionUUID->"e8505ca2-cab8-4c31-918b-ff23596d43c6"],
Cell[88634, 2048, 1087, 34, 93, "Input",ExpressionUUID->"1e9bcfb9-d955-40b1-a224-d0aab64ff834"],
Cell[CellGroupData[{
Cell[89746, 2086, 232, 5, 28, "Input",ExpressionUUID->"89d6c928-0fba-44b5-b1ee-d3b7fd7c21e4"],
Cell[89981, 2093, 45271, 619, 3828, "Output",ExpressionUUID->"cb9f7689-d9aa-4aa8-a74f-0e3ee94d040c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135289, 2717, 236, 6, 28, "Input",ExpressionUUID->"b4fcb000-f033-48e2-a9fe-a203efd20f77"],
Cell[135528, 2725, 158, 3, 32, "Output",ExpressionUUID->"8818f3c8-a917-4dfc-8a83-a0d9f4918c02"]
}, Open  ]],
Cell[135701, 2731, 3907, 103, 371, "Input",ExpressionUUID->"3de5c412-53d8-4c8e-b6bd-1933551cdad6"],
Cell[CellGroupData[{
Cell[139633, 2838, 301, 5, 31, "Input",ExpressionUUID->"1abdb478-b28a-44f9-b147-d233e96e53a9"],
Cell[139937, 2845, 349, 6, 32, "Output",ExpressionUUID->"45de4f8a-9410-4aec-9027-aa9db1caf498"]
}, Open  ]],
Cell[140301, 2854, 3879, 105, 331, "Input",ExpressionUUID->"43e9132e-981d-4aa2-9459-60d1a6f7d853"],
Cell[CellGroupData[{
Cell[144205, 2963, 820, 23, 75, "Input",ExpressionUUID->"04c6f04f-d180-40a2-bb64-150fe34bda17"],
Cell[145028, 2988, 1516, 27, 147, "Output",ExpressionUUID->"f68a6dfe-5271-4ee7-8751-e06a9d77ccd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146581, 3020, 693, 18, 53, "Input",ExpressionUUID->"396137f7-3abf-48bf-89ef-10f69f3f2c19"],
Cell[147277, 3040, 507, 11, 32, "Output",ExpressionUUID->"7b52e5bc-4046-4931-956f-009731d54c9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147821, 3056, 911, 24, 75, "Input",ExpressionUUID->"e060e49b-a060-496a-b1e0-3245c774986b"],
Cell[148735, 3082, 1493, 28, 128, "Output",ExpressionUUID->"2fecc906-47b2-4b1c-99c1-b9cd7d5be4bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150265, 3115, 645, 17, 53, "Input",ExpressionUUID->"84fd848d-4298-46d2-b404-4dd7c84121bc"],
Cell[150913, 3134, 500, 10, 32, "Output",ExpressionUUID->"72a6b496-294e-4ce8-bb1c-a5369fd00f86"]
}, Open  ]],
Cell[151428, 3147, 255, 5, 105, "Input",ExpressionUUID->"c3a61733-399d-4cf3-bc21-4f90cd3ab7d6"],
Cell[151686, 3154, 927, 22, 86, "Input",ExpressionUUID->"78dddf86-f9bd-48c6-9602-873c15bdb2b2"],
Cell[152616, 3178, 897, 22, 160, "Input",ExpressionUUID->"bccedfa3-2ca4-4af0-9e5f-e02d64a3b80e"],
Cell[CellGroupData[{
Cell[153538, 3204, 822, 23, 75, "Input",ExpressionUUID->"f8393e9e-23f0-490f-96cf-9cda94535a91"],
Cell[154363, 3229, 1475, 27, 147, "Output",ExpressionUUID->"aa50dd27-7ab4-47d4-a201-f3ee9d3d3dba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155875, 3261, 693, 18, 53, "Input",ExpressionUUID->"dafde40d-231c-4454-b52c-dea8a3f001ba"],
Cell[156571, 3281, 459, 10, 32, "Output",ExpressionUUID->"21d26591-b531-4368-b104-67de1f870800"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157067, 3296, 911, 24, 75, "Input",ExpressionUUID->"48c04f4f-8e64-480c-a519-7f52db405035"],
Cell[157981, 3322, 1412, 26, 128, "Output",ExpressionUUID->"0152eb4b-0a32-46b3-8406-09d6654b282d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159430, 3353, 591, 16, 53, "Input",ExpressionUUID->"0ee00b99-c976-4a96-95c3-b496b67d7221"],
Cell[160024, 3371, 396, 8, 32, "Output",ExpressionUUID->"898f7250-56df-4d07-8437-56221751f9a9"]
}, Open  ]]
}
]
*)

